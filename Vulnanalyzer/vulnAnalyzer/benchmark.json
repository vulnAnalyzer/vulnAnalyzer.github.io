[ {
  "project_slug" : "x-stream__xstream_CVE-2013-7285_1.4.6",
  "advisory_id" : "https://github.com/advisories/GHSA-f554-x222-wgf7",
  "cve_id" : "CVE-2013-7285",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "void setupAliases()",
    "API" : "com.thoughtworks.xstream.XStream:void:setupAliases()"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "Mapper buildMapper()",
    "API" : "com.thoughtworks.xstream.XStream:Mapper:buildMapper()"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "Mapper buildMapperDynamically(String,Class,Object)",
    "API" : "com.thoughtworks.xstream.XStream:Mapper:buildMapperDynamically(String,Class,Object)"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/mapper/CachingMapper.java",
    "signature" : "Class realClass(String)",
    "API" : "com.thoughtworks.xstream.mapper.CachingMapper:Class:realClass(String)"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/mapper/CachingMapper.java",
    "signature" : "void flushCache()",
    "API" : "com.thoughtworks.xstream.mapper.CachingMapper:void:flushCache()"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/converters/extended/FileConverter.java",
    "signature" : "Object fromString(String str)",
    "API" : "com.thoughtworks.xstream.converters.extended.FileConverter:Object:fromString(String str)"
  } ]
}, {
  "project_slug" : "jlangch__venice_CVE-2022-36007_1.10.16",
  "advisory_id" : "https://github.com/advisories/GHSA-4mmh-5vw7-rgvj",
  "cve_id" : "CVE-2022-36007",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/com/github/jlangch/venice/impl/util/io/LoadPaths.java",
    "signature" : "boolean isFileWithinDirectory(File,File)",
    "API" : "com.github.jlangch.venice.impl.util.io.LoadPaths:boolean:isFileWithinDirectory(File,File)"
  }, {
    "file" : "src/main/java/com/github/jlangch/venice/impl/util/io/LoadPaths.java",
    "signature" : "boolean isFileWithinDirectory(File,File)",
    "API" : "com.github.jlangch.venice.impl.util.io.LoadPaths:boolean:isFileWithinDirectory(File,File)"
  } ]
}, {
  "project_slug" : "apache__dubbo_CVE-2021-30180_2.7.9",
  "advisory_id" : "https://github.com/advisories/GHSA-7wfc-x4f7-gg2x",
  "cve_id" : "CVE-2021-30180",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParser.java",
    "signature" : "T parseObject(String)",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParser:T:parseObject(String)"
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParser.java",
    "signature" : "List parseConfigurators(String)",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParser:List:parseConfigurators(String)"
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParser.java",
    "signature" : "List parseJsonArray(String)",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParser:List:parseJsonArray(String)"
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/config/model/ConditionRuleParser.java",
    "signature" : "ConditionRouterRule parse(String)",
    "API" : "org.apache.dubbo.rpc.cluster.router.condition.config.model.ConditionRuleParser:ConditionRouterRule:parse(String)"
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/tag/model/TagRuleParser.java",
    "signature" : "TagRouterRule parse(String)",
    "API" : "org.apache.dubbo.rpc.cluster.router.tag.model.TagRuleParser:TagRouterRule:parse(String)"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseConsumerSpecificProvidersTest()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseConsumerSpecificProvidersTest()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseConfiguratorsServiceMultiAppsTest()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseConfiguratorsServiceMultiAppsTest()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseConfiguratorsAppAnyServicesTest()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseConfiguratorsAppAnyServicesTest()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseConfiguratorsAppMultiServicesTest()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseConfiguratorsAppMultiServicesTest()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseConfiguratorsAppNoServiceTest()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseConfiguratorsAppNoServiceTest()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java",
    "signature" : "void parseURLJsonArrayCompatible()",
    "API" : "org.apache.dubbo.rpc.cluster.configurator.parser.ConfigParserTest:void:parseURLJsonArrayCompatible()"
  }, {
    "file" : "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/TagRouterTest.java",
    "signature" : "void tagRouterRuleParseTest()",
    "API" : "org.apache.dubbo.rpc.cluster.router.TagRouterTest:void:tagRouterRuleParseTest()"
  }, {
    "file" : "dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java",
    "signature" : "Object realize(Object,Class)",
    "API" : "org.apache.dubbo.common.utils.PojoUtils:Object:realize(Object,Class)"
  }, {
    "file" : "dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java",
    "signature" : "Object generalize(Object)",
    "API" : "org.apache.dubbo.common.utils.PojoUtils:Object:generalize(Object)"
  }, {
    "file" : "dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java",
    "signature" : "void testRealizeCollectionWithNullElement()",
    "API" : "org.apache.dubbo.common.utils.PojoUtilsTest:void:testRealizeCollectionWithNullElement()"
  }, {
    "file" : "dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java",
    "signature" : "void setList(List)",
    "API" : "org.apache.dubbo.common.utils.PojoUtilsTest:void:setList(List)"
  }, {
    "file" : "dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java",
    "signature" : "int hashCode()",
    "API" : "org.apache.dubbo.common.utils.PojoUtilsTest:int:hashCode()"
  } ]
}, {
  "project_slug" : "apache__sling-org-apache-sling-servlets-resolver_CVE-2024-23673_2.10.0",
  "advisory_id" : "https://github.com/advisories/GHSA-h2rq-qhr7-53gm",
  "cve_id" : "CVE-2024-23673",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/apache/sling/servlets/resolver/internal/SlingScriptResolverImpl.java",
    "signature" : "SlingScript findScript(ResourceResolver,String)",
    "API" : "org.apache.sling.servlets.resolver.internal.SlingScriptResolverImpl:SlingScript:findScript(ResourceResolver,String)"
  }, {
    "file" : "src/main/java/org/apache/sling/servlets/resolver/internal/SlingServletResolver.java",
    "signature" : "boolean isPathAllowed(String,String)",
    "API" : "org.apache.sling.servlets.resolver.internal.SlingServletResolver:boolean:isPathAllowed(String,String)"
  }, {
    "file" : "src/main/java/org/apache/sling/servlets/resolver/internal/SlingServletResolver.java",
    "signature" : "Servlet resolveServletInternal(SlingHttpServletRequest,Resource,String,ResourceResolver)",
    "API" : "org.apache.sling.servlets.resolver.internal.SlingServletResolver:Servlet:resolveServletInternal(SlingHttpServletRequest,Resource,String,ResourceResolver)"
  } ]
}, {
  "project_slug" : "apache__rocketmq_CVE-2023-37582_4.9.6",
  "advisory_id" : "https://github.com/advisories/GHSA-gpq8-963w-8qc9",
  "cve_id" : "CVE-2023-37582",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java",
    "signature" : "RemotingCommand updateConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessor:RemotingCommand:updateConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/test/java/org/apache/rocketmq/namesrv/processor/RequestProcessorTest.java",
    "signature" : "void testProcessRequest_UpdateConfigPath()",
    "API" : "org.apache.rocketmq.namesrv.processor.RequestProcessorTest:void:testProcessRequest_UpdateConfigPath()"
  } ]
}, {
  "project_slug" : "codehaus-plexus__plexus-utils_CVE-2017-1000487_3.0.15",
  "advisory_id" : "https://github.com/advisories/GHSA-8vhq-qq4p-grq3",
  "cve_id" : "CVE-2017-1000487",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "int getPosition()",
    "API" : "org.codehaus.plexus.util.cli.Commandline:int:getPosition()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "String getShellCommandline()",
    "API" : "org.codehaus.plexus.util.cli.Commandline:String:getShellCommandline()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "String getArguments()",
    "API" : "org.codehaus.plexus.util.cli.Commandline:String:getArguments()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "Process execute()",
    "API" : "org.codehaus.plexus.util.cli.Commandline:Process:execute()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "Commandline(String,Shell)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "Commandline(String)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "void verifyShellState()",
    "API" : "org.codehaus.plexus.util.cli.Commandline:void:verifyShellState()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/Commandline.java",
    "signature" : "String translateCommandline(String)",
    "API" : "org.codehaus.plexus.util.cli.Commandline:String:translateCommandline(String)"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java",
    "signature" : "BourneShell(boolean)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java",
    "signature" : "String getShellArgs()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShell:String:getShellArgs()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java",
    "signature" : "void setQuotedArgumentsEnabled(boolean)",
    "API" : "org.codehaus.plexus.util.cli.shell.Shell:void:setQuotedArgumentsEnabled(boolean)"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java",
    "signature" : "String getExecutionPreamble()",
    "API" : "org.codehaus.plexus.util.cli.shell.Shell:String:getExecutionPreamble()"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java",
    "signature" : "List getRawCommandLine(String,String)",
    "API" : "org.codehaus.plexus.util.cli.shell.Shell:List:getRawCommandLine(String,String)"
  }, {
    "file" : "src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java",
    "signature" : "char getEscapeChars(boolean,boolean)",
    "API" : "org.codehaus.plexus.util.cli.shell.Shell:char:getEscapeChars(boolean,boolean)"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testGetShellCommandLineNonWindows()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testGetShellCommandLineNonWindows()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testQuotedPathWithSingleApostrophe()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testQuotedPathWithSingleApostrophe()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testGetShellCommandLineBash_WithSingleQuotedArg()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testGetShellCommandLineBash_WithSingleQuotedArg()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testQuotedPathWithQuotationMark()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testQuotedPathWithQuotationMark()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testGetShellCommandLineBash_WithWorkingDirectory()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testGetShellCommandLineBash_WithWorkingDirectory()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/CommandlineTest.java",
    "signature" : "void testGetShellCommandLineBash()",
    "API" : "org.codehaus.plexus.util.cli.CommandlineTest:void:testGetShellCommandLineBash()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes_BackslashFileSep()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes_BackslashFileSep()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testBourneShellQuotingCharacters()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testBourneShellQuotingCharacters()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testArgumentsWithsemicolon()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testArgumentsWithsemicolon()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testEscapeSingleQuotesOnArgument()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testEscapeSingleQuotesOnArgument()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testPreserveSingleQuotesOnArgument()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testPreserveSingleQuotesOnArgument()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/util/cli/shell/BourneShellTest.java",
    "signature" : "void testQuoteWorkingDirectoryAndExecutable()",
    "API" : "org.codehaus.plexus.util.cli.shell.BourneShellTest:void:testQuoteWorkingDirectoryAndExecutable()"
  } ]
}, {
  "project_slug" : "xuxueli__xxl-job_CVE-2020-29204_2.2.0",
  "advisory_id" : "https://github.com/advisories/GHSA-wc73-w5r9-x9pc",
  "cve_id" : "CVE-2020-29204",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xxl-job-admin/src/main/java/com/xxl/job/admin/controller/JobGroupController.java",
    "signature" : "ReturnT save(XxlJobGroup)",
    "API" : "com.xxl.job.admin.controller.JobGroupController:ReturnT:save(XxlJobGroup)"
  }, {
    "file" : "xxl-job-admin/src/main/java/com/xxl/job/admin/controller/UserController.java",
    "signature" : "Map pageList(int,int,String,int)",
    "API" : "com.xxl.job.admin.controller.UserController:Map:pageList(int,int,String,int)"
  } ]
}, {
  "project_slug" : "hapifhir__org.hl7.fhir.core_CVE-2023-28465_5.6.105",
  "advisory_id" : "https://github.com/advisories/GHSA-9654-pr4f-gh6m",
  "cve_id" : "CVE-2023-28465",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
    "signature" : "void readVersionInfo(InputStream)",
    "API" : "org.hl7.fhir.r4b.context.SimpleWorkerContext:void:readVersionInfo(InputStream)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderFormItem(XhtmlNode,Questionnaire,QuestionnaireItemComponent,String,int)",
    "API" : "org.hl7.fhir.r4b.renderers.QuestionnaireRenderer:boolean:renderFormItem(XhtmlNode,Questionnaire,QuestionnaireItemComponent,String,int)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderTreeItem(HierarchicalTableGenerator,List,Questionnaire,QuestionnaireItemComponent,boolean)",
    "API" : "org.hl7.fhir.r4b.renderers.QuestionnaireRenderer:boolean:renderTreeItem(HierarchicalTableGenerator,List,Questionnaire,QuestionnaireItemComponent,boolean)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderDefinition(XhtmlNode,Questionnaire,QuestionnaireItemComponent,List)",
    "API" : "org.hl7.fhir.r4b.renderers.QuestionnaireRenderer:boolean:renderDefinition(XhtmlNode,Questionnaire,QuestionnaireItemComponent,List)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderRootDefinition(XhtmlNode,Questionnaire,List)",
    "API" : "org.hl7.fhir.r4b.renderers.QuestionnaireRenderer:boolean:renderRootDefinition(XhtmlNode,Questionnaire,List)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "XhtmlNode item(XhtmlNode,String)",
    "API" : "org.hl7.fhir.r4b.renderers.QuestionnaireRenderer:XhtmlNode:item(XhtmlNode,String)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/QuestionnaireRenderer.java",
    "signature" : "QuestionnaireRenderer(RenderingContext)",
    "API" : ""
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
    "signature" : "void unzip(InputStream,String)",
    "API" : "org.hl7.fhir.r4b.terminologies.TerminologyCacheManager:void:unzip(InputStream,String)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/test/utils/ToolsHelper.java",
    "signature" : "Map getDefinitions(String)",
    "API" : "org.hl7.fhir.r4b.test.utils.ToolsHelper:Map:getDefinitions(String)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/test/utils/ToolsHelper.java",
    "signature" : "void testRoundTrip(String,String,Collection)",
    "API" : "org.hl7.fhir.r4b.test.utils.ToolsHelper:void:testRoundTrip(String,String,Collection)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/test/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManagerTests.java",
    "signature" : "void testSlip2Zip()",
    "API" : "org.hl7.fhir.r4b.terminologies.TerminologyCacheManagerTests:void:testSlip2Zip()"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
    "signature" : "void readVersionInfo(InputStream)",
    "API" : "org.hl7.fhir.r5.context.SimpleWorkerContext:void:readVersionInfo(InputStream)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderDefinition(XhtmlNode,Questionnaire,QuestionnaireItemComponent,List)",
    "API" : "org.hl7.fhir.r5.renderers.QuestionnaireRenderer:boolean:renderDefinition(XhtmlNode,Questionnaire,QuestionnaireItemComponent,List)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "XhtmlNode item(XhtmlNode,String)",
    "API" : "org.hl7.fhir.r5.renderers.QuestionnaireRenderer:XhtmlNode:item(XhtmlNode,String)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderFormItem(XhtmlNode,Questionnaire,QuestionnaireItemComponent,String,int)",
    "API" : "org.hl7.fhir.r5.renderers.QuestionnaireRenderer:boolean:renderFormItem(XhtmlNode,Questionnaire,QuestionnaireItemComponent,String,int)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderTreeItem(HierarchicalTableGenerator,List,Questionnaire,QuestionnaireItemComponent,boolean)",
    "API" : "org.hl7.fhir.r5.renderers.QuestionnaireRenderer:boolean:renderTreeItem(HierarchicalTableGenerator,List,Questionnaire,QuestionnaireItemComponent,boolean)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "boolean renderRootDefinition(XhtmlNode,Questionnaire,List)",
    "API" : "org.hl7.fhir.r5.renderers.QuestionnaireRenderer:boolean:renderRootDefinition(XhtmlNode,Questionnaire,List)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/QuestionnaireRenderer.java",
    "signature" : "QuestionnaireRenderer(RenderingContext)",
    "API" : ""
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
    "signature" : "void unzip(InputStream,String)",
    "API" : "org.hl7.fhir.r5.terminologies.TerminologyCacheManager:void:unzip(InputStream,String)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/test/utils/ToolsHelper.java",
    "signature" : "void testRoundTrip(String,String,Collection)",
    "API" : "org.hl7.fhir.r5.test.utils.ToolsHelper:void:testRoundTrip(String,String,Collection)"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/test/utils/ToolsHelper.java",
    "signature" : "Map getDefinitions(String)",
    "API" : "org.hl7.fhir.r5.test.utils.ToolsHelper:Map:getDefinitions(String)"
  }, {
    "file" : "org.hl7.fhir.r5/src/test/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManagerTests.java",
    "signature" : "void testSlip2Zip()",
    "API" : "org.hl7.fhir.r5.terminologies.TerminologyCacheManagerTests:void:testSlip2Zip()"
  }, {
    "file" : "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
    "signature" : "String padLeft(String,char,int)",
    "API" : "org.hl7.fhir.utilities.Utilities:String:padLeft(String,char,int)"
  }, {
    "file" : "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
    "signature" : "String path(String)",
    "API" : "org.hl7.fhir.utilities.Utilities:String:path(String)"
  }, {
    "file" : "org.hl7.fhir.utilities/src/test/java/org/hl7/fhir/utilities/UtilitiesTest.java",
    "signature" : "String getJavaHomeDirectory()",
    "API" : "org.hl7.fhir.utilities.UtilitiesTest:String:getJavaHomeDirectory()"
  }, {
    "file" : "org.hl7.fhir.utilities/src/test/java/org/hl7/fhir/utilities/UtilitiesTest.java",
    "signature" : "void testDecimalRoutines()",
    "API" : "org.hl7.fhir.utilities.UtilitiesTest:void:testDecimalRoutines()"
  }, {
    "file" : "org.hl7.fhir.utilities/src/test/java/org/hl7/fhir/utilities/UtilitiesTest.java",
    "signature" : "void testDateRoutines()",
    "API" : "org.hl7.fhir.utilities.UtilitiesTest:void:testDateRoutines()"
  }, {
    "file" : "org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
    "signature" : "Map readZip(InputStream)",
    "API" : "org.hl7.fhir.validation.IgLoader:Map:readZip(InputStream)"
  }, {
    "file" : "org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
    "signature" : "String loadPackageForVersion(InputStream)",
    "API" : "org.hl7.fhir.validation.IgLoader:String:loadPackageForVersion(InputStream)"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/conversion/tests/UtilitiesXTests.java",
    "signature" : "boolean findTestResource(String)",
    "API" : "org.hl7.fhir.conversion.tests.UtilitiesXTests:boolean:findTestResource(String)"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/conversion/tests/UtilitiesXTests.java",
    "signature" : "String loadTestResource(String)",
    "API" : "org.hl7.fhir.conversion.tests.UtilitiesXTests:String:loadTestResource(String)"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/validation/IgLoaderTests.java",
    "signature" : "void testFailIfInvalidFHIRVersion()",
    "API" : "org.hl7.fhir.validation.IgLoaderTests:void:testFailIfInvalidFHIRVersion()"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/validation/ScannerTest.java",
    "signature" : "void testSlipZipWin()",
    "API" : "org.hl7.fhir.validation.ScannerTest:void:testSlipZipWin()"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/validation/ScannerTest.java",
    "signature" : "void beforeAll()",
    "API" : "org.hl7.fhir.validation.ScannerTest:void:beforeAll()"
  }, {
    "file" : "org.hl7.fhir.validation/src/test/java/org/hl7/fhir/validation/ScannerTest.java",
    "signature" : "void testSlipZip()",
    "API" : "org.hl7.fhir.validation.ScannerTest:void:testSlipZip()"
  } ]
}, {
  "project_slug" : "kubernetes-client__java_CVE-2020-8570_client-java-parent-9.0.1",
  "advisory_id" : "https://github.com/advisories/GHSA-cghx-9gcr-r42x",
  "cve_id" : "CVE-2020-8570",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "util/src/main/java/io/kubernetes/client/Copy.java",
    "signature" : "void copyDirectoryFromPod(String,String,String,String,Path,boolean)",
    "API" : "io.kubernetes.client.Copy:void:copyDirectoryFromPod(String,String,String,String,Path,boolean)"
  } ]
}, {
  "project_slug" : "nahsra__antisamy_CVE-2022-29577_1.6.6.1",
  "advisory_id" : "https://github.com/advisories/GHSA-vp37-2f9p-3vr3",
  "cve_id" : "CVE-2022-29577",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/validator/html/scan/AntiSamyDOMScanner.java",
    "signature" : "boolean processStyleTag(Element,Node)",
    "API" : "org.owasp.validator.html.scan.AntiSamyDOMScanner:boolean:processStyleTag(Element,Node)"
  }, {
    "file" : "src/test/java/org/owasp/validator/html/test/AntiSamyTest.java",
    "signature" : "void testSmuggledTagsInStyleContent()",
    "API" : "org.owasp.validator.html.test.AntiSamyTest:void:testSmuggledTagsInStyleContent()"
  }, {
    "file" : "src/test/java/org/owasp/validator/html/test/AntiSamyTest.java",
    "signature" : "void testMalformedPIScan()",
    "API" : "org.owasp.validator.html.test.AntiSamyTest:void:testMalformedPIScan()"
  } ]
}, {
  "project_slug" : "apache__activemq_CVE-2020-11998_5.15.12",
  "advisory_id" : "https://github.com/advisories/GHSA-wqfh-9m4g-7x6x",
  "cve_id" : "CVE-2020-11998",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagementContext.java",
    "signature" : "void createConnector(MBeanServer)",
    "API" : "org.apache.activemq.broker.jmx.ManagementContext:void:createConnector(MBeanServer)"
  }, {
    "file" : "activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagementContext.java",
    "signature" : "void createConnector(MBeanServer)",
    "API" : "org.apache.activemq.broker.jmx.ManagementContext:void:createConnector(MBeanServer)"
  }, {
    "file" : "activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagementContext.java",
    "signature" : "void createConnector(MBeanServer)",
    "API" : "org.apache.activemq.broker.jmx.ManagementContext:void:createConnector(MBeanServer)"
  } ]
}, {
  "project_slug" : "alibaba__nacos_CVE-2021-44667_2.0.3",
  "advisory_id" : "https://github.com/advisories/GHSA-4gr7-qw2q-jxh6",
  "cve_id" : "CVE-2021-44667",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "keycloak__keycloak_CVE-2014-3656_1.0.5.Final",
  "advisory_id" : "https://github.com/advisories/GHSA-px42-mr8m-cpgh",
  "cve_id" : "CVE-2014-3656",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "core/src/main/java/org/keycloak/util/UriUtils.java",
    "signature" : "String getOrigin(String)",
    "API" : "org.keycloak.util.UriUtils:String:getOrigin(String)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/OpenIDConnectService.java",
    "signature" : "Response getLoginStatusIframe(String,String)",
    "API" : "org.keycloak.protocol.oidc.OpenIDConnectService:Response:getLoginStatusIframe(String,String)"
  } ]
}, {
  "project_slug" : "keycloak__keycloak_CVE-2022-1274_20.0.4",
  "advisory_id" : "https://github.com/advisories/GHSA-m4fv-gm5m-4725",
  "cve_id" : "CVE-2022-1274",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "services/src/main/java/org/keycloak/authentication/actiontoken/execactions/ExecuteActionsActionTokenHandler.java",
    "signature" : "Response handleToken(ExecuteActionsActionToken,ActionTokenContext)",
    "API" : "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:Response:handleToken(ExecuteActionsActionToken,ActionTokenContext)"
  }, {
    "file" : "services/src/main/java/org/keycloak/authentication/actiontoken/execactions/ExecuteActionsActionTokenHandler.java",
    "signature" : "Predicate getVerifiers(ActionTokenContext)",
    "API" : "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:Predicate:getVerifiers(ActionTokenContext)"
  }, {
    "file" : "services/src/main/java/org/keycloak/services/resources/admin/UserResource.java",
    "signature" : "Response executeActionsEmail(String,String,Integer,List)",
    "API" : "org.keycloak.services.resources.admin.UserResource:Response:executeActionsEmail(String,String,Integer,List)"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java",
    "signature" : "void sendResetPasswordEmail()",
    "API" : "org.keycloak.testsuite.admin.UserTest:void:sendResetPasswordEmail()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java",
    "signature" : "void sendResetPasswordEmailSuccess()",
    "API" : "org.keycloak.testsuite.admin.UserTest:void:sendResetPasswordEmailSuccess()"
  } ]
}, {
  "project_slug" : "perwendel__spark_CVE-2018-9159_2.7.1",
  "advisory_id" : "https://github.com/advisories/GHSA-76qr-mmh8-cp8f",
  "cve_id" : "CVE-2018-9159",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "ClassPathResource(String,ClassLoader)",
    "API" : ""
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "String getPath()",
    "API" : "spark.resource.ClassPathResource:String:getPath()"
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create()"
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create_withNullThreadPool()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create_withNullThreadPool()"
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create_withThreadPool()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create_withThreadPool()"
  }, {
    "file" : "src/test/java/spark/examples/staticresources/StaticResources.java",
    "signature" : "void main(String)",
    "API" : "spark.examples.staticresources.StaticResources:void:main(String)"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "String getPath()",
    "API" : "spark.resource.ClassPathResource:String:getPath()"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "ClassPathResource(String,ClassLoader)",
    "API" : ""
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create()"
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create_withNullThreadPool()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create_withNullThreadPool()"
  }, {
    "file" : "src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java",
    "signature" : "void create_withThreadPool()",
    "API" : "spark.embeddedserver.jetty.EmbeddedJettyFactoryTest:void:create_withThreadPool()"
  }, {
    "file" : "src/test/java/spark/examples/staticresources/StaticResources.java",
    "signature" : "void main(String)",
    "API" : "spark.examples.staticresources.StaticResources:void:main(String)"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "ClassPathResource(String,ClassLoader,Class)",
    "API" : ""
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "InputStream getInputStream()",
    "API" : "spark.resource.ClassPathResource:InputStream:getInputStream()"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "URL getURL()",
    "API" : "spark.resource.ClassPathResource:URL:getURL()"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "boolean exists()",
    "API" : "spark.resource.ClassPathResource:boolean:exists()"
  }, {
    "file" : "src/main/java/spark/resource/ClassPathResource.java",
    "signature" : "boolean equals(Object)",
    "API" : "spark.resource.ClassPathResource:boolean:equals(Object)"
  } ]
}, {
  "project_slug" : "apache__activemq_CVE-2019-0222_5.15.8",
  "advisory_id" : "https://github.com/advisories/GHSA-jpv3-g4cc-6vfx",
  "cve_id" : "CVE-2019-0222",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java",
    "signature" : "void testMessageDecodingPerformance()",
    "API" : "org.apache.activemq.transport.mqtt.MQTTCodecTest:void:testMessageDecodingPerformance()"
  }, {
    "file" : "activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt/MQTTCodecTest.java",
    "signature" : "void testMessageDecodingPerformance()",
    "API" : "org.apache.activemq.transport.mqtt.MQTTCodecTest:void:testMessageDecodingPerformance()"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-commons_CVE-2022-24897_12.6.6",
  "advisory_id" : "https://github.com/advisories/GHSA-cvx5-m8vg-vxgc",
  "cve_id" : "CVE-2022-24897",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-velocity/src/main/java/org/xwiki/velocity/introspection/SecureIntrospector.java",
    "signature" : "SecureIntrospector(String,String,Logger)",
    "API" : ""
  } ]
}, {
  "project_slug" : "diffplug__goomph_CVE-2022-26049_3.37.1",
  "advisory_id" : "https://github.com/advisories/GHSA-p2f7-9cv7-jjf6",
  "cve_id" : "CVE-2022-26049",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/com/diffplug/gradle/ZipMisc.java",
    "signature" : "void unzip(File,File)",
    "API" : "com.diffplug.gradle.ZipMisc:void:unzip(File,File)"
  } ]
}, {
  "project_slug" : "eclipse__hawkbit_CVE-2020-27219_0.3.0M6",
  "advisory_id" : "https://github.com/advisories/GHSA-rcvx-rmvf-mxch",
  "cve_id" : "CVE-2020-27219",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "jenkinsci__git-client-plugin_CVE-2019-10392_2.8.4",
  "advisory_id" : "https://github.com/advisories/GHSA-hw6x-2qwv-rxr7",
  "cve_id" : "CVE-2019-10392",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "List getSubmodules(String)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:List:getSubmodules(String)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "FetchCommand fetch_(URIish,List,boolean,boolean,boolean,Integer,Integer)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:FetchCommand:fetch_(URIish,List,boolean,boolean,boolean,Integer,Integer)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "Map getRemoteReferences(String,String,boolean,boolean)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:Map:getRemoteReferences(String,String,boolean,boolean)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "List getBranchesContaining(String)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:List:getBranchesContaining(String)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "CloneCommand clone_(String,String,boolean,boolean,boolean,String,Integer,Integer,List)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:CloneCommand:clone_(String,String,boolean,boolean,boolean,String,Integer,Integer,List)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "Map getRemoteSymbolicReferences(String,String)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:Map:getRemoteSymbolicReferences(String,String)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/gitclient/CliGitAPIImpl.java",
    "signature" : "boolean refExists(String)",
    "API" : "org.jenkinsci.plugins.gitclient.CliGitAPIImpl:boolean:refExists(String)"
  } ]
}, {
  "project_slug" : "jenkinsci__workflow-multibranch-plugin_CVE-2022-25175_706.vd43c65dec013",
  "advisory_id" : "https://github.com/advisories/GHSA-pj84-qjm3-77mg",
  "cve_id" : "CVE-2022-25175",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/multibranch/ReadTrustedStep.java",
    "signature" : "String getPath()",
    "API" : "org.jenkinsci.plugins.workflow.multibranch.ReadTrustedStep:String:getPath()"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/multibranch/ReadTrustedStep.java",
    "signature" : "String getFilePathSuffix()",
    "API" : "org.jenkinsci.plugins.workflow.multibranch.ReadTrustedStep:String:getFilePathSuffix()"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/multibranch/ReadTrustedStep.java",
    "signature" : "String run()",
    "API" : "org.jenkinsci.plugins.workflow.multibranch.ReadTrustedStep:String:run()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/multibranch/ReadTrustedStepTest.java",
    "signature" : "void smokes()",
    "API" : "org.jenkinsci.plugins.workflow.multibranch.ReadTrustedStepTest:void:smokes()"
  } ]
}, {
  "project_slug" : "payara__Payara_CVE-2022-37422_5.2022.2",
  "advisory_id" : "https://github.com/advisories/GHSA-h28c-453m-h9xm",
  "cve_id" : "CVE-2022-37422",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "appserver/web/web-core/src/main/java/org/apache/catalina/connector/CoyoteAdapter.java",
    "signature" : "boolean normalize(MessageBytes)",
    "API" : "org.apache.catalina.connector.CoyoteAdapter:boolean:normalize(MessageBytes)"
  }, {
    "file" : "appserver/web/web-core/src/main/java/org/apache/catalina/connector/CoyoteAdapter.java",
    "signature" : "boolean postParseRequest(org,Request,org,Response,boolean)",
    "API" : "org.apache.catalina.connector.CoyoteAdapter:boolean:postParseRequest(org,Request,org,Response,boolean)"
  }, {
    "file" : "appserver/web/web-core/src/main/java/org/apache/catalina/connector/CoyoteAdapter.java",
    "signature" : "boolean normalizeBytes(MessageBytes)",
    "API" : "org.apache.catalina.connector.CoyoteAdapter:boolean:normalizeBytes(MessageBytes)"
  }, {
    "file" : "appserver/web/web-core/src/main/java/org/apache/catalina/connector/CoyoteAdapter.java",
    "signature" : "void copyBytes(byte,int,int,int)",
    "API" : "org.apache.catalina.connector.CoyoteAdapter:void:copyBytes(byte,int,int,int)"
  }, {
    "file" : "appserver/web/web-core/src/main/java/org/apache/catalina/connector/CoyoteAdapter.java",
    "signature" : "boolean normalizeChars(MessageBytes)",
    "API" : "org.apache.catalina.connector.CoyoteAdapter:boolean:normalizeChars(MessageBytes)"
  } ]
}, {
  "project_slug" : "yamcs__yamcs_CVE-2023-45277_5.8.6",
  "advisory_id" : "https://github.com/advisories/GHSA-w4m2-qmh3-2g8f",
  "cve_id" : "CVE-2023-45277",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "void putObject(String,String,Map,byte,Path,BasicFileAttributes)",
    "API" : "org.yamcs.yarch.FileSystemBucket:void:putObject(String,String,Map,byte,Path,BasicFileAttributes)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "byte getObject(String)",
    "API" : "org.yamcs.yarch.FileSystemBucket:byte:getObject(String)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "ObjectProperties findObject(String)",
    "API" : "org.yamcs.yarch.FileSystemBucket:ObjectProperties:findObject(String)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "ObjectProperties toObjectProperties(String,Path,BasicFileAttributes)",
    "API" : "org.yamcs.yarch.FileSystemBucket:ObjectProperties:toObjectProperties(String,Path,BasicFileAttributes)"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-commons_CVE-2023-31126_14.10.3",
  "advisory_id" : "https://github.com/advisories/GHSA-pv7v-ph6g-3gxv",
  "cve_id" : "CVE-2023-31126",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/SecureHTMLElementSanitizer.java",
    "signature" : "boolean isAllowedValue(String,String,String)",
    "API" : "org.xwiki.xml.internal.html.SecureHTMLElementSanitizer:boolean:isAllowedValue(String,String,String)"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/SecureHTMLElementSanitizer.java",
    "signature" : "boolean isAttributeAllowed(String,String,String)",
    "API" : "org.xwiki.xml.internal.html.SecureHTMLElementSanitizer:boolean:isAttributeAllowed(String,String,String)"
  } ]
}, {
  "project_slug" : "apache__sling-org-apache-sling-xss_CVE-2016-5394_1.0.8",
  "advisory_id" : "https://github.com/advisories/GHSA-xwf4-88xr-hx2j",
  "cve_id" : "CVE-2016-5394",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSAPIImpl.java",
    "signature" : "String getValidDimension(String,String)",
    "API" : "org.apache.sling.xss.impl.XSSAPIImpl:String:getValidDimension(String,String)"
  }, {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSAPIImpl.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSAPIImpl.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSFilterImpl.java",
    "signature" : "void handleEvent(Event)",
    "API" : "org.apache.sling.xss.impl.XSSFilterImpl:void:handleEvent(Event)"
  }, {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSFilterImpl.java",
    "signature" : "XSSFilterRule getFilterRule(ProtectionContext)",
    "API" : "org.apache.sling.xss.impl.XSSFilterImpl:XSSFilterRule:getFilterRule(ProtectionContext)"
  }, {
    "file" : "src/main/java/org/apache/sling/xss/impl/XSSFilterImpl.java",
    "signature" : "void updateDefaultHandler()",
    "API" : "org.apache.sling.xss.impl.XSSFilterImpl:void:updateDefaultHandler()"
  }, {
    "file" : "src/test/java/org/apache/sling/xss/impl/XSSAPIImplTest.java",
    "signature" : "void testGetValidJSToken()",
    "API" : "org.apache.sling.xss.impl.XSSAPIImplTest:void:testGetValidJSToken()"
  }, {
    "file" : "src/test/java/org/apache/sling/xss/impl/XSSAPIImplTest.java",
    "signature" : "void testGetValidDimension()",
    "API" : "org.apache.sling.xss.impl.XSSAPIImplTest:void:testGetValidDimension()"
  }, {
    "file" : "src/test/java/org/apache/sling/xss/impl/XSSAPIImplTest.java",
    "signature" : "void testGetValidHref()",
    "API" : "org.apache.sling.xss.impl.XSSAPIImplTest:void:testGetValidHref()"
  }, {
    "file" : "src/test/java/org/apache/sling/xss/impl/XSSAPIImplTest.java",
    "signature" : "void testFilterHTML()",
    "API" : "org.apache.sling.xss.impl.XSSAPIImplTest:void:testFilterHTML()"
  }, {
    "file" : "src/test/java/org/apache/sling/xss/impl/XSSAPIImplTest.java",
    "signature" : "void testEncodeForCSSString()",
    "API" : "org.apache.sling.xss.impl.XSSAPIImplTest:void:testEncodeForCSSString()"
  } ]
}, {
  "project_slug" : "jeremylong__DependencyCheck_CVE-2018-12036_3.1.2",
  "advisory_id" : "https://github.com/advisories/GHSA-hcwx-7q5v-vc67",
  "cve_id" : "CVE-2018-12036",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "core/src/main/java/org/owasp/dependencycheck/analyzer/ArchiveAnalyzer.java",
    "signature" : "void extractFiles(File,File,Engine)",
    "API" : "org.owasp.dependencycheck.analyzer.ArchiveAnalyzer:void:extractFiles(File,File,Engine)"
  }, {
    "file" : "core/src/main/java/org/owasp/dependencycheck/analyzer/ArchiveAnalyzer.java",
    "signature" : "void extractArchive(ArchiveInputStream,File,Engine)",
    "API" : "org.owasp.dependencycheck.analyzer.ArchiveAnalyzer:void:extractArchive(ArchiveInputStream,File,Engine)"
  }, {
    "file" : "core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java",
    "signature" : "void extractFiles(File,File,Engine)",
    "API" : "org.owasp.dependencycheck.utils.ExtractionUtil:void:extractFiles(File,File,Engine)"
  }, {
    "file" : "core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java",
    "signature" : "void extractGzip(File)",
    "API" : "org.owasp.dependencycheck.utils.ExtractionUtil:void:extractGzip(File)"
  }, {
    "file" : "core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java",
    "signature" : "void extractArchive(ArchiveInputStream,File,FilenameFilter)",
    "API" : "org.owasp.dependencycheck.utils.ExtractionUtil:void:extractArchive(ArchiveInputStream,File,FilenameFilter)"
  } ]
}, {
  "project_slug" : "jenkinsci__script-security-plugin_CVE-2023-24422_1228.vd93135a_2fb_25",
  "advisory_id" : "https://github.com/advisories/GHSA-76qj-9gwh-pvv3",
  "cve_id" : "CVE-2023-24422",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SandboxInterceptor.java",
    "signature" : "Object onNewInstance(GroovyInterceptor,Class,Object)",
    "API" : "org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SandboxInterceptor:Object:onNewInstance(GroovyInterceptor,Class,Object)"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SandboxInterceptorTest.java",
    "signature" : "void groovyInterceptable()",
    "API" : "org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SandboxInterceptorTest:void:groovyInterceptable()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SandboxInterceptorTest.java",
    "signature" : "void unsafeReturnValue()",
    "API" : "org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SandboxInterceptorTest:void:unsafeReturnValue()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SandboxInterceptorTest.java",
    "signature" : "void primitiveTypes()",
    "API" : "org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SandboxInterceptorTest:void:primitiveTypes()"
  } ]
}, {
  "project_slug" : "fabric8io__kubernetes-client_CVE-2021-4178_5.0.2",
  "advisory_id" : "https://github.com/advisories/GHSA-98g7-rxmf-rrxm",
  "cve_id" : "CVE-2021-4178",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/utils/Serialization.java",
    "signature" : "<T> T unmarshalYaml(InputStream is, TypeReference<T> type)",
    "API" : "io.fabric8.kubernetes.client.utils.Serialization:<T>:T unmarshalYaml(InputStream is, TypeReference<T> type)"
  } ]
}, {
  "project_slug" : "ff4j__ff4j_CVE-2022-44262_1.8.13",
  "advisory_id" : "https://github.com/advisories/GHSA-65hj-9ppw-77xc",
  "cve_id" : "CVE-2022-44262",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "ff4j-config-properties/src/main/java/org/ff4j/parser/properties/PropertiesParser.java",
    "signature" : "void parseFeatures(FF4jConfiguration,Map)",
    "API" : "org.ff4j.parser.properties.PropertiesParser:void:parseFeatures(FF4jConfiguration,Map)"
  }, {
    "file" : "ff4j-config-properties/src/main/java/org/ff4j/parser/properties/PropertiesParser.java",
    "signature" : "Map parseProperties(String,Map)",
    "API" : "org.ff4j.parser.properties.PropertiesParser:Map:parseProperties(String,Map)"
  }, {
    "file" : "ff4j-config-properties/src/test/java/org/ff4j/parser/properties/PropertiesParserTest.java",
    "signature" : "void importProperties_should_be_same_asXMLImport()",
    "API" : "org.ff4j.parser.properties.PropertiesParserTest:void:importProperties_should_be_same_asXMLImport()"
  }, {
    "file" : "ff4j-config-properties/src/test/java/org/ff4j/parser/properties/PropertiesParserTest.java",
    "signature" : "void should_export_anyConfig_asProperties()",
    "API" : "org.ff4j.parser.properties.PropertiesParserTest:void:should_export_anyConfig_asProperties()"
  }, {
    "file" : "ff4j-config-properties/src/test/java/org/ff4j/parser/properties/PropertiesParserTest.java",
    "signature" : "void propertiesFile_shouldExist()",
    "API" : "org.ff4j.parser.properties.PropertiesParserTest:void:propertiesFile_shouldExist()"
  }, {
    "file" : "ff4j-config-yaml/src/main/java/org/ff4j/parser/yaml/YamlParser.java",
    "signature" : "Map parseProperties(List)",
    "API" : "org.ff4j.parser.yaml.YamlParser:Map:parseProperties(List)"
  }, {
    "file" : "ff4j-config-yaml/src/main/java/org/ff4j/parser/yaml/YamlParser.java",
    "signature" : "FlippingStrategy parseFlipStrategy(Feature,Map)",
    "API" : "org.ff4j.parser.yaml.YamlParser:FlippingStrategy:parseFlipStrategy(Feature,Map)"
  }, {
    "file" : "ff4j-config-yaml/src/test/java/org/ff4j/parser/yaml/YamlParserTest.java",
    "signature" : "void yamlFile_shouldExist()",
    "API" : "org.ff4j.parser.yaml.YamlParserTest:void:yamlFile_shouldExist()"
  }, {
    "file" : "ff4j-config-yaml/src/test/java/org/ff4j/parser/yaml/YamlParserTest.java",
    "signature" : "void importYaml_should_be_same_asXMLImport()",
    "API" : "org.ff4j.parser.yaml.YamlParserTest:void:importYaml_should_be_same_asXMLImport()"
  }, {
    "file" : "ff4j-core/src/main/java/org/ff4j/conf/XmlParser.java",
    "signature" : "Map parsePropertiesTag(Element)",
    "API" : "org.ff4j.conf.XmlParser:Map:parsePropertiesTag(Element)"
  }, {
    "file" : "ff4j-core/src/main/java/org/ff4j/conf/XmlParser.java",
    "signature" : "FlippingStrategy parseFlipStrategy(Element,String)",
    "API" : "org.ff4j.conf.XmlParser:FlippingStrategy:parseFlipStrategy(Element,String)"
  }, {
    "file" : "ff4j-core/src/main/java/org/ff4j/property/util/PropertyFactory.java",
    "signature" : "Property createProperty(String,String,String,String,Set)",
    "API" : "org.ff4j.property.util.PropertyFactory:Property:createProperty(String,String,String,String,Set)"
  }, {
    "file" : "ff4j-core/src/main/java/org/ff4j/utils/MappingUtil.java",
    "signature" : "FlippingStrategy instanceFlippingStrategy(String,String,Map)",
    "API" : "org.ff4j.utils.MappingUtil:FlippingStrategy:instanceFlippingStrategy(String,String,Map)"
  }, {
    "file" : "ff4j-core/src/test/java/org/ff4j/test/parser/XmlParserTest.java",
    "signature" : "void testParsingFeatureInvalidTag()",
    "API" : "org.ff4j.test.parser.XmlParserTest:void:testParsingFeatureInvalidTag()"
  }, {
    "file" : "ff4j-core/src/test/java/org/ff4j/test/parser/XmlParserTest.java",
    "signature" : "void testParseXMLWithSpecialCharacters()",
    "API" : "org.ff4j.test.parser.XmlParserTest:void:testParseXMLWithSpecialCharacters()"
  }, {
    "file" : "ff4j-core/src/test/java/org/ff4j/test/property/PropertyFactoryTest.java",
    "signature" : "void testPropertyFactory9()",
    "API" : "org.ff4j.test.property.PropertyFactoryTest:void:testPropertyFactory9()"
  }, {
    "file" : "ff4j-core/src/test/java/org/ff4j/test/utils/MappingUtilsTest.java",
    "signature" : "void testIntanciateInvalidFlippingStrategy()",
    "API" : "org.ff4j.test.utils.MappingUtilsTest:void:testIntanciateInvalidFlippingStrategy()"
  }, {
    "file" : "ff4j-core/src/test/java/org/ff4j/test/utils/MappingUtilsTest.java",
    "signature" : "void testAssert4()",
    "API" : "org.ff4j.test.utils.MappingUtilsTest:void:testAssert4()"
  }, {
    "file" : "ff4j-web/src/main/java/org/ff4j/web/embedded/ConsoleOperations.java",
    "signature" : "void createFeature(FF4j,HttpServletRequest)",
    "API" : "org.ff4j.web.embedded.ConsoleOperations:void:createFeature(FF4j,HttpServletRequest)"
  }, {
    "file" : "ff4j-web/src/main/java/org/ff4j/web/embedded/ConsoleOperations.java",
    "signature" : "void updateFlippingStrategy(Feature,String,String)",
    "API" : "org.ff4j.web.embedded.ConsoleOperations:void:updateFlippingStrategy(Feature,String,String)"
  } ]
}, {
  "project_slug" : "apache__rocketmq_CVE-2019-17572_4.6.0",
  "advisory_id" : "https://github.com/advisories/GHSA-5x3v-2gxr-59m2",
  "cve_id" : "CVE-2019-17572",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java",
    "signature" : "RemotingCommand msgCheck(ChannelHandlerContext,SendMessageRequestHeader,RemotingCommand)",
    "API" : "org.apache.rocketmq.broker.processor.AbstractSendMessageProcessor:RemotingCommand:msgCheck(ChannelHandlerContext,SendMessageRequestHeader,RemotingCommand)"
  }, {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
    "signature" : "RemotingCommand updateAndCreateTopic(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.broker.processor.AdminBrokerProcessor:RemotingCommand:updateAndCreateTopic(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
    "signature" : "RemotingCommand updateGlobalWhiteAddrsConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.broker.processor.AdminBrokerProcessor:RemotingCommand:updateGlobalWhiteAddrsConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
    "signature" : "RemotingCommand updateAndCreateAccessConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.broker.processor.AdminBrokerProcessor:RemotingCommand:updateAndCreateAccessConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java",
    "signature" : "Set getSystemTopic()",
    "API" : "org.apache.rocketmq.broker.topic.TopicConfigManager:Set:getSystemTopic()"
  }, {
    "file" : "client/src/main/java/org/apache/rocketmq/client/Validators.java",
    "signature" : "boolean regularExpressionMatcher(String,Pattern)",
    "API" : "org.apache.rocketmq.client.Validators:boolean:regularExpressionMatcher(String,Pattern)"
  }, {
    "file" : "client/src/main/java/org/apache/rocketmq/client/Validators.java",
    "signature" : "void checkMessage(Message,DefaultMQProducer)",
    "API" : "org.apache.rocketmq.client.Validators:void:checkMessage(Message,DefaultMQProducer)"
  }, {
    "file" : "client/src/main/java/org/apache/rocketmq/client/Validators.java",
    "signature" : "void checkTopic(String)",
    "API" : "org.apache.rocketmq.client.Validators:void:checkTopic(String)"
  }, {
    "file" : "client/src/main/java/org/apache/rocketmq/client/impl/MQAdminImpl.java",
    "signature" : "void createTopic(String,String,int,int)",
    "API" : "org.apache.rocketmq.client.impl.MQAdminImpl:void:createTopic(String,String,int,int)"
  }, {
    "file" : "client/src/main/java/org/apache/rocketmq/client/impl/MQClientAPIImpl.java",
    "signature" : "void createPlainAccessConfig(String,PlainAccessConfig,long)",
    "API" : "org.apache.rocketmq.client.impl.MQClientAPIImpl:void:createPlainAccessConfig(String,PlainAccessConfig,long)"
  }, {
    "file" : "common/src/main/java/org/apache/rocketmq/common/UtilAll.java",
    "signature" : "List String2List(String,String)",
    "API" : "org.apache.rocketmq.common.UtilAll:List:String2List(String,String)"
  }, {
    "file" : "common/src/main/java/org/apache/rocketmq/common/UtilAll.java",
    "signature" : "String List2String(List,String)",
    "API" : "org.apache.rocketmq.common.UtilAll:String:List2String(List,String)"
  } ]
}, {
  "project_slug" : "zeroturnaround__zt-zip_CVE-2018-1002201_1.12",
  "advisory_id" : "https://github.com/advisories/GHSA-qcf3-9vmh-xw4r",
  "cve_id" : "CVE-2018-1002201",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/zeroturnaround/zip/ZipUtil.java",
    "signature" : "void process(InputStream,ZipEntry)",
    "API" : "org.zeroturnaround.zip.ZipUtil:void:process(InputStream,ZipEntry)"
  }, {
    "file" : "src/main/java/org/zeroturnaround/zip/ZipUtil.java",
    "signature" : "String getRootName(String)",
    "API" : "org.zeroturnaround.zip.ZipUtil:String:getRootName(String)"
  }, {
    "file" : "src/main/java/org/zeroturnaround/zip/ZipUtil.java",
    "signature" : "void process(InputStream,ZipEntry)",
    "API" : "org.zeroturnaround.zip.ZipUtil:void:process(InputStream,ZipEntry)"
  } ]
}, {
  "project_slug" : "asf__cxf_CVE-2016-6812_3.0.11",
  "advisory_id" : "https://github.com/advisories/GHSA-vw2c-5wph-v92r",
  "cve_id" : "CVE-2016-6812",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "void setAddress(AbstractDestination,String)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:void:setAddress(AbstractDestination,String)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "String getBaseURL(HttpServletRequest)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:String:getBaseURL(HttpServletRequest)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "String getAbsoluteAddress(String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:String:getAbsoluteAddress(String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "void writeRESTfulEndpoints(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void:writeRESTfulEndpoints(PrintWriter,String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/ServiceListGeneratorServlet.java",
    "signature" : "void service(HttpServletRequest,HttpServletResponse)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void:service(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testGetGenericBook()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testGetGenericBook()"
  }, {
    "file" : "distribution/src/main/release/samples/jax_rs/spring_boot/src/main/java/sample/rs/service/SampleRestApplication.java",
    "signature" : "Server rsServer()",
    "API" : "sample.rs.service.SampleRestApplication:Server:rsServer()"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "String getBaseURL(HttpServletRequest)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:String:getBaseURL(HttpServletRequest)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/ServiceListGeneratorServlet.java",
    "signature" : "void service(HttpServletRequest,HttpServletResponse)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void:service(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testEchoBookForm3()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testEchoBookForm3()"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testGetServicesPageWithServletPatternMatchOnly()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testGetServicesPageWithServletPatternMatchOnly()"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "String getBaseURL(HttpServletRequest)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:String:getBaseURL(HttpServletRequest)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "void setAddress(AbstractDestination,String)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:void:setAddress(AbstractDestination,String)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "String getAbsoluteAddress(String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:String:getAbsoluteAddress(String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "void writeRESTfulEndpoints(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void:writeRESTfulEndpoints(PrintWriter,String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/ServiceListGeneratorServlet.java",
    "signature" : "void service(HttpServletRequest,HttpServletResponse)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void:service(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testGetGenericBook()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testGetGenericBook()"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/BaseUrlHelper.java",
    "signature" : "String getBaseURL(HttpServletRequest)",
    "API" : "org.apache.cxf.transport.servlet.BaseUrlHelper:String:getBaseURL(HttpServletRequest)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/ServiceListGeneratorServlet.java",
    "signature" : "void service(HttpServletRequest,HttpServletResponse)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void:service(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testEchoBookForm3()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testEchoBookForm3()"
  }, {
    "file" : "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerSpringBookTest.java",
    "signature" : "void testGetServicesPageWithServletPatternMatchOnly()",
    "API" : "org.apache.cxf.systest.jaxrs.JAXRSClientServerSpringBookTest:void:testGetServicesPageWithServletPatternMatchOnly()"
  } ]
}, {
  "project_slug" : "dromara__hutool_CVE-2018-17297_4.1.11",
  "advisory_id" : "https://github.com/advisories/GHSA-rhq2-2574-78mc",
  "cve_id" : "CVE-2018-17297",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
    "signature" : "File unzip(ZipFile,File)",
    "API" : "cn.hutool.core.util.ZipUtil:File:unzip(ZipFile,File)"
  }, {
    "file" : "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
    "signature" : "void write(ZipFile,ZipEntry,File)",
    "API" : "cn.hutool.core.util.ZipUtil:void:write(ZipFile,ZipEntry,File)"
  }, {
    "file" : "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
    "signature" : "File unzip(ZipInputStream,File)",
    "API" : "cn.hutool.core.util.ZipUtil:File:unzip(ZipInputStream,File)"
  }, {
    "file" : "hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java",
    "signature" : "void getMimeTypeTest()",
    "API" : "cn.hutool.core.io.FileUtilTest:void:getMimeTypeTest()"
  } ]
}, {
  "project_slug" : "codehaus-plexus__plexus-utils_CVE-2022-4244_3.0.23",
  "advisory_id" : "https://github.com/advisories/GHSA-g6ph-x5wf-g337",
  "cve_id" : "CVE-2022-4244",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/codehaus/plexus/util/Expand.java",
    "signature" : "void extractFile(File,File,InputStream,String,Date,boolean)",
    "API" : "org.codehaus.plexus.util.Expand:void:extractFile(File,File,InputStream,String,Date,boolean)"
  } ]
}, {
  "project_slug" : "vert-x3__vertx-web_CVE-2019-17640_3.9.3",
  "advisory_id" : "https://github.com/advisories/GHSA-vjw7-6gfq-6wf5",
  "cve_id" : "CVE-2019-17640",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
    "signature" : "void handle(RoutingContext)",
    "API" : "io.vertx.ext.web.handler.impl.StaticHandlerImpl:void:handle(RoutingContext)"
  }, {
    "file" : "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
    "signature" : "void testGetDefaultIndex()",
    "API" : "io.vertx.ext.web.handler.StaticHandlerTest:void:testGetDefaultIndex()"
  }, {
    "file" : "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
    "signature" : "long toDateTime(String)",
    "API" : "io.vertx.ext.web.handler.StaticHandlerTest:long:toDateTime(String)"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-commons_CVE-2023-29201_14.6",
  "advisory_id" : "https://github.com/advisories/GHSA-m3jr-cvhj-f35j",
  "cve_id" : "CVE-2023-29201",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
    "signature" : "HTMLCleanerConfiguration getDefaultConfiguration()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleaner:HTMLCleanerConfiguration:getDefaultConfiguration()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
    "signature" : "CleanerProperties getDefaultCleanerProperties(HTMLCleanerConfiguration)",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleaner:CleanerProperties:getDefaultCleanerProperties(HTMLCleanerConfiguration)"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/html/HTMLUtilsTest.java",
    "signature" : "void stripHTMLEnvelope()",
    "API" : "org.xwiki.xml.html.HTMLUtilsTest:void:stripHTMLEnvelope()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/html/filter/AbstractHTMLFilterTest.java",
    "signature" : "void setUp(ComponentManager)",
    "API" : "org.xwiki.xml.html.filter.AbstractHTMLFilterTest:void:setUp(ComponentManager)"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void verifyEntitiesAreNotBroken()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:verifyEntitiesAreNotBroken()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void verifySpanIsExpanded()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:verifySpanIsExpanded()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "Document clean(String)",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:Document:clean(String)"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void verifyExternalLinksAreSecure()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:verifyExternalLinksAreSecure()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void cleanHTMLTagWithNamespace()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:cleanHTMLTagWithNamespace()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void setUpCleaner()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:setUpCleaner()"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
    "signature" : "void transformedDOMContent()",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleanerTest:void:transformedDOMContent()"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-rendering_CVE-2023-32070_14.6",
  "advisory_id" : "https://github.com/advisories/GHSA-6gf5-c898-7rxp",
  "cve_id" : "CVE-2023-32070",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedhtml5/src/main/java/org/xwiki/rendering/internal/renderer/html5/AnnotatedHTML5Renderer.java",
    "signature" : "void initialize()",
    "API" : "org.xwiki.rendering.internal.renderer.html5.AnnotatedHTML5Renderer:void:initialize()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedxhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/AnnotatedXHTMLRenderer.java",
    "signature" : "void initialize()",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.AnnotatedXHTMLRenderer:void:initialize()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/main/java/org/xwiki/rendering/internal/renderer/html5/HTML5ChainingRenderer.java",
    "signature" : "void beginFormat(Format,Map)",
    "API" : "org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer:void:beginFormat(Format,Map)"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/main/java/org/xwiki/rendering/internal/renderer/html5/HTML5Renderer.java",
    "signature" : "void initialize()",
    "API" : "org.xwiki.rendering.internal.renderer.html5.HTML5Renderer:void:initialize()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/test/java/org/xwiki/rendering/internal/html5/HTML5ChainingRendererTest.java",
    "signature" : "void setUp()",
    "API" : "org.xwiki.rendering.internal.html5.HTML5ChainingRendererTest:void:setUp()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/parser/xhtml/wikimodel/XHTMLXWikiGeneratorListener.java",
    "signature" : "WikiParameters cleanParametersFromMetadata(WikiParameters)",
    "API" : "org.xwiki.rendering.internal.parser.xhtml.wikimodel.XHTMLXWikiGeneratorListener:WikiParameters:cleanParametersFromMetadata(WikiParameters)"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRenderer.java",
    "signature" : "void endGroup(Map)",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer:void:endGroup(Map)"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRenderer.java",
    "signature" : "XHTMLWikiPrinter getXHTMLWikiPrinter()",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer:XHTMLWikiPrinter:getXHTMLWikiPrinter()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLRenderer.java",
    "signature" : "void initialize()",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.XHTMLRenderer:void:initialize()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRendererTest.java",
    "signature" : "void onRawText()",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRendererTest:void:onRawText()"
  }, {
    "file" : "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRendererTest.java",
    "signature" : "void outputFigureCaptionEvents()",
    "API" : "org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRendererTest:void:outputFigureCaptionEvents()"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "void handleSpaceWhenInText()",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:void:handleSpaceWhenInText()"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "void printXMLStartElement(String,String)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:void:printXMLStartElement(String,String)"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "void printXMLElement(String,Map)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:void:printXMLElement(String,Map)"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "void printXML(String)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:void:printXML(String)"
  } ]
}, {
  "project_slug" : "jmrozanec__cron-utils_CVE-2021-41269_9.1.5",
  "advisory_id" : "https://github.com/advisories/GHSA-p9m8-27x8-rg87",
  "cve_id" : "CVE-2021-41269",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/com/cronutils/parser/CronParser.java",
    "signature" : "Cron parse(String)",
    "API" : "com.cronutils.parser.CronParser:Cron:parse(String)"
  }, {
    "file" : "src/test/java/com/cronutils/Issue418Test.java",
    "signature" : "void testInvalidWeekDayStart()",
    "API" : "com.cronutils.Issue418Test:void:testInvalidWeekDayStart()"
  }, {
    "file" : "src/test/java/com/cronutils/Issue418Test.java",
    "signature" : "void testInvalidWeekDayEnd()",
    "API" : "com.cronutils.Issue418Test:void:testInvalidWeekDayEnd()"
  }, {
    "file" : "src/test/java/com/cronutils/parser/CronParserQuartzIntegrationTest.java",
    "signature" : "void testMissingExpressionAndInvalidCharsInErrorMessage()",
    "API" : "com.cronutils.parser.CronParserQuartzIntegrationTest:void:testMissingExpressionAndInvalidCharsInErrorMessage()"
  }, {
    "file" : "src/test/java/com/cronutils/validation/CronValidatorTest.java",
    "signature" : "CronValidatorTest(String,boolean)",
    "API" : ""
  }, {
    "file" : "src/main/java/com/cronutils/validation/CronValidator.java",
    "signature" : "boolean isValid(String,ConstraintValidatorContext)",
    "API" : "com.cronutils.validation.CronValidator:boolean:isValid(String,ConstraintValidatorContext)"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-rendering_CVE-2023-37908_14.10.3",
  "advisory_id" : "https://github.com/advisories/GHSA-663w-2xp3-5739",
  "cve_id" : "CVE-2023-37908",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/SecureHTMLElementSanitizerTest.java",
    "signature" : "boolean isAttributeAllowed(String elementName, String attributeName, String attributeValue)",
    "API" : "org.xwiki.xml.internal.html.SecureHTMLElementSanitizerTest:boolean:isAttributeAllowed(String elementName, String attributeName, String attributeValue)"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "Map<String, String> cleanAttributes(String elementName, Map<String, String> attributes)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:Map<String,:String> cleanAttributes(String elementName, Map<String, String> attributes)"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "String[][] cleanAttributes(String elementName, String[][] attributes)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:String[][]:cleanAttributes(String elementName, String[][] attributes)"
  }, {
    "file" : "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java",
    "signature" : "Attributes cleanAttributes(String elementName, Attributes attributes)",
    "API" : "org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter:Attributes:cleanAttributes(String elementName, Attributes attributes)"
  } ]
}, {
  "project_slug" : "eclipse-ee4j__glassfish_CVE-2022-2712_6.2.5",
  "advisory_id" : "https://github.com/advisories/GHSA-3g5w-6pw7-6hrp",
  "cve_id" : "CVE-2022-2712",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "jenkinsci__workflow-cps-global-lib-plugin_CVE-2022-25174_544.vff04fa68714d",
  "advisory_id" : "https://github.com/advisories/GHSA-g9fx-6j5c-grmw",
  "cve_id" : "CVE-2022-25174",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/FolderLibraries.java",
    "signature" : "Collection forGroup(ItemGroup,boolean)",
    "API" : "org.jenkinsci.plugins.workflow.libs.FolderLibraries:Collection:forGroup(ItemGroup,boolean)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryAdder.java",
    "signature" : "List retrieve(String,String,LibraryRetriever,boolean,Boolean,LibraryCachingConfiguration,TaskListener,Run,CpsFlowExecution,Set)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdder:List:retrieve(String,String,LibraryRetriever,boolean,Boolean,LibraryCachingConfiguration,TaskListener,Run,CpsFlowExecution,Set)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryAdder.java",
    "signature" : "Map findResources(CpsFlowExecution,String,String)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdder:Map:findResources(CpsFlowExecution,String,String)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryAdder.java",
    "signature" : "String parse(String)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdder:String:parse(String)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryAdder.java",
    "signature" : "List add(CpsFlowExecution,List,HashMap)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdder:List:add(CpsFlowExecution,List,HashMap)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryAdder.java",
    "signature" : "Map loadScripts(CpsFlowExecution)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdder:Map:loadScripts(CpsFlowExecution)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryResolver.java",
    "signature" : "Collection suggestedConfigurations(ItemGroup)",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryResolver:Collection:suggestedConfigurations(ItemGroup)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryStep.java",
    "signature" : "LoadedClasses run()",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryStep:LoadedClasses:run()"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/LibraryStep.java",
    "signature" : "LoadedClasses(String,boolean,Boolean,String,String,String)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/libs/SCMSourceRetriever.java",
    "signature" : "void doRetrieve(String,boolean,SCM,String,FilePath,Run,TaskListener)",
    "API" : "org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever:void:doRetrieve(String,boolean,SCM,String,FilePath,Run,TaskListener)"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/LibraryAdderTest.java",
    "signature" : "void smokes()",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryAdderTest:void:smokes()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/LibraryStepTest.java",
    "signature" : "void classes()",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryStepTest:void:classes()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/LibraryStepTest.java",
    "signature" : "void vars()",
    "API" : "org.jenkinsci.plugins.workflow.libs.LibraryStepTest:void:vars()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/ResourceStepTest.java",
    "signature" : "void smokes()",
    "API" : "org.jenkinsci.plugins.workflow.libs.ResourceStepTest:void:smokes()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/ResourceStepTest.java",
    "signature" : "void specifyResourceEncoding()",
    "API" : "org.jenkinsci.plugins.workflow.libs.ResourceStepTest:void:specifyResourceEncoding()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/SCMSourceRetrieverTest.java",
    "signature" : "void includeChanges()",
    "API" : "org.jenkinsci.plugins.workflow.libs.SCMSourceRetrieverTest:void:includeChanges()"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/libs/SCMSourceRetrieverTest.java",
    "signature" : "void lease()",
    "API" : "org.jenkinsci.plugins.workflow.libs.SCMSourceRetrieverTest:void:lease()"
  } ]
}, {
  "project_slug" : "ESAPI__esapi-java-legacy_CVE-2022-24891_2.2.3.1",
  "advisory_id" : "https://github.com/advisories/GHSA-q77q-vx4q-xx6q",
  "cve_id" : "CVE-2022-24891",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidSafeHTML(String,String,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidSafeHTML(String,String,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidFileName(String,String,List,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidFileName(String,String,List,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidFileContent(String,byte,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidFileContent(String,byte,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String safeReadLine(InputStream,int)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:safeReadLine(InputStream,int)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidDouble(String,String,double,double,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidDouble(String,String,double,double,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidFileUpload(String,String,String,File,byte,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidFileUpload(String,String,String,File,byte,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidDirectoryPath(String,String,File,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidDirectoryPath(String,String,File,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidInteger(String,String,int,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidInteger(String,String,int,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidDirectoryPath(String,String,File,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidDirectoryPath(String,String,File,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "byte getValidFileContent(String,byte,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:byte:getValidFileContent(String,byte,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidInput(String,String,String,int,boolean,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidInput(String,String,String,int,boolean,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "char getValidPrintable(String,char,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:char:getValidPrintable(String,char,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Integer getValidInteger(String,String,int,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Integer:getValidInteger(String,String,int,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidListItem(String,String,List,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidListItem(String,String,List,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidInput(String,String,String,int,boolean,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidInput(String,String,String,int,boolean,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidSafeHTML(String,String,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidSafeHTML(String,String,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "void assertValidFileUpload(String,String,String,File,byte,int,List,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:void:assertValidFileUpload(String,String,String,File,byte,int,List,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidListItem(String,String,List)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidListItem(String,String,List)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidInteger(String,String,int,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidInteger(String,String,int,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidURI(String,String,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidURI(String,String,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidFileName(String,String,List,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidFileName(String,String,List,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "byte getValidFileContent(String,byte,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:byte:getValidFileContent(String,byte,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidFileContent(String,byte,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidFileContent(String,byte,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidFileName(String,String,List,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidFileName(String,String,List,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidPrintable(String,char,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidPrintable(String,char,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidSafeHTML(String,String,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidSafeHTML(String,String,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Double getValidDouble(String,String,double,double,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Double:getValidDouble(String,String,double,double,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidFileName(String,String,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidFileName(String,String,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidPrintable(String,String,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidPrintable(String,String,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Date getValidDate(String,String,DateFormat,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Date:getValidDate(String,String,DateFormat,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Double getValidNumber(String,String,long,long,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Double:getValidNumber(String,String,long,long,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidPrintable(String,String,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidPrintable(String,String,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidPrintable(String,String,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidPrintable(String,String,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "void assertValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:void:assertValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidNumber(String,String,long,long,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidNumber(String,String,long,long,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "void assertValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:void:assertValidHTTPRequestParameterSet(String,HttpServletRequest,Set,Set)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidCreditCard(String,String,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidCreditCard(String,String,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidPrintable(String,char,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidPrintable(String,char,int,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Date getValidDate(String,String,DateFormat,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Date:getValidDate(String,String,DateFormat,boolean)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "Integer getValidInteger(String,String,int,int,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:Integer:getValidInteger(String,String,int,int,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "boolean isValidDirectoryPath(String,String,File,boolean,ValidationErrorList)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:boolean:isValidDirectoryPath(String,String,File,boolean,ValidationErrorList)"
  }, {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidSafeHTML(String,String,int,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidSafeHTML(String,String,int,boolean)"
  } ]
}, {
  "project_slug" : "asf__james-project_CVE-2022-22931_3.6.0",
  "advisory_id" : "https://github.com/advisories/GHSA-v84g-cf5j-xjqx",
  "cve_id" : "CVE-2022-22931",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "mailbox/maildir/src/main/java/org/apache/james/mailbox/maildir/MaildirFolder.java",
    "signature" : "MaildirFolder validateWithinFolder(File)",
    "API" : "org.apache.james.mailbox.maildir.MaildirFolder:MaildirFolder:validateWithinFolder(File)"
  }, {
    "file" : "server/data/data-file/src/main/java/org/apache/james/sieverepository/file/SieveFileRepository.java",
    "signature" : "void enforceRoot(File)",
    "API" : "org.apache.james.sieverepository.file.SieveFileRepository:void:enforceRoot(File)"
  }, {
    "file" : "server/data/data-file/src/test/java/org/apache/james/sieverepository/file/SieveFileRepositoryTest.java",
    "signature" : "void getScriptShouldNotAllowToReadScriptsOfOtherUsers()",
    "API" : "org.apache.james.sieverepository.file.SieveFileRepositoryTest:void:getScriptShouldNotAllowToReadScriptsOfOtherUsers()"
  } ]
}, {
  "project_slug" : "spring-cloud__spring-cloud-config_CVE-2020-5405_2.1.6.RELEASE",
  "advisory_id" : "https://github.com/advisories/GHSA-g86w-v5vg-9gxf",
  "cve_id" : "CVE-2020-5405",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "spring-cloud-config-client/src/main/java/org/springframework/cloud/config/client/ConfigServicePropertySourceLocator.java",
    "signature" : "Environment getRemoteEnvironment(RestTemplate,ConfigClientProperties,String,String)",
    "API" : "org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:Environment:getRemoteEnvironment(RestTemplate,ConfigClientProperties,String,String)"
  }, {
    "file" : "spring-cloud-config-client/src/main/java/org/springframework/cloud/config/environment/Environment.java",
    "signature" : "String getProfiles()",
    "API" : "org.springframework.cloud.config.environment.Environment:String:getProfiles()"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/environment/EnvironmentController.java",
    "signature" : "Environment getEnvironment(String,String,String,boolean)",
    "API" : "org.springframework.cloud.config.server.environment.EnvironmentController:Environment:getEnvironment(String,String,String,boolean)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/GenericResourceRepository.java",
    "signature" : "boolean isInvalidEncodedPath(String)",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepository:boolean:isInvalidEncodedPath(String)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/GenericResourceRepository.java",
    "signature" : "Resource findOne(String,String,String,String)",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepository:Resource:findOne(String,String,String,String)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/GenericResourceRepository.java",
    "signature" : "Collection getProfilePaths(String,String)",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepository:Collection:getProfilePaths(String,String)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/ResourceController.java",
    "signature" : "byte binary(ServletWebRequest,String,String,String,String)",
    "API" : "org.springframework.cloud.config.server.resource.ResourceController:byte:binary(ServletWebRequest,String,String,String,String)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/ResourceController.java",
    "signature" : "String resolveName(String)",
    "API" : "org.springframework.cloud.config.server.resource.ResourceController:String:resolveName(String)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/ResourceController.java",
    "signature" : "String retrieve(ServletWebRequest,String,String,String,String,boolean)",
    "API" : "org.springframework.cloud.config.server.resource.ResourceController:String:retrieve(ServletWebRequest,String,String,String,String,boolean)"
  }, {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/ResourceController.java",
    "signature" : "boolean checkNotModified(ServletWebRequest,Resource)",
    "API" : "org.springframework.cloud.config.server.resource.ResourceController:boolean:checkNotModified(ServletWebRequest,Resource)"
  }, {
    "file" : "spring-cloud-config-server/src/test/java/org/springframework/cloud/config/server/resource/GenericResourceRepositoryTests.java",
    "signature" : "void invalidPath()",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepositoryTests:void:invalidPath()"
  } ]
}, {
  "project_slug" : "keycloak__keycloak_CVE-2022-3782_20.0.1",
  "advisory_id" : "https://github.com/advisories/GHSA-g8q8-fggx-9r3q",
  "cve_id" : "CVE-2022-3782",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/endpoints/LogoutEndpoint.java",
    "signature" : "Response doBrowserLogout(AuthenticationSessionModel)",
    "API" : "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:Response:doBrowserLogout(AuthenticationSessionModel)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/endpoints/LogoutEndpoint.java",
    "signature" : "Response logoutConfirmGet()",
    "API" : "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:Response:logoutConfirmGet()"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/endpoints/LogoutEndpoint.java",
    "signature" : "Response logoutConfirmAction()",
    "API" : "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:Response:logoutConfirmAction()"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String verifyRedirectUri(KeycloakSession,String,String,Set,boolean)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:verifyRedirectUri(KeycloakSession,String,String,Set,boolean)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String lowerCaseHostname(String)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:lowerCaseHostname(String)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String getSingleValidRedirectUri(Collection)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:getSingleValidRedirectUri(Collection)"
  }, {
    "file" : "services/src/main/java/org/keycloak/services/managers/AuthenticationSessionManager.java",
    "signature" : "List getAuthSessionCookies(RealmModel)",
    "API" : "org.keycloak.services.managers.AuthenticationSessionManager:List:getAuthSessionCookies(RealmModel)"
  }, {
    "file" : "services/src/main/java/org/keycloak/services/managers/UserSessionCrossDCManager.java",
    "signature" : "UserSessionModel getUserSessionIfExistsRemotely(AuthenticationSessionManager,RealmModel,UserSessionModel)",
    "API" : "org.keycloak.services.managers.UserSessionCrossDCManager:UserSessionModel:getUserSessionIfExistsRemotely(AuthenticationSessionManager,RealmModel,UserSessionModel)"
  }, {
    "file" : "services/src/main/java/org/keycloak/services/resources/SessionCodeChecks.java",
    "signature" : "AuthenticationSessionModel initialVerifyAuthSession()",
    "API" : "org.keycloak.services.resources.SessionCodeChecks:AuthenticationSessionModel:initialVerifyAuthSession()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/OAuthRedirectUriTest.java",
    "signature" : "void testWildcard()",
    "API" : "org.keycloak.testsuite.oauth.OAuthRedirectUriTest:void:testWildcard()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/OAuthRedirectUriTest.java",
    "signature" : "void testLocalhost()",
    "API" : "org.keycloak.testsuite.oauth.OAuthRedirectUriTest:void:testLocalhost()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/OAuthRedirectUriTest.java",
    "signature" : "void testDifferentCaseInHostname()",
    "API" : "org.keycloak.testsuite.oauth.OAuthRedirectUriTest:void:testDifferentCaseInHostname()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void logoutSessionWhenLoggedOutByAdmin()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:logoutSessionWhenLoggedOutByAdmin()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void logoutWithValidIdTokenWhenLoggedOutByAdmin()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:logoutWithValidIdTokenWhenLoggedOutByAdmin()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void logoutRedirectWithIdTokenHintPointToDifferentSession()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:logoutRedirectWithIdTokenHintPointToDifferentSession()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void testIncorrectChangingParameters()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:testIncorrectChangingParameters()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void logoutWithExpiredIdToken()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:logoutWithExpiredIdToken()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RPInitiatedLogoutTest.java",
    "signature" : "void logoutWithExpiredSession()",
    "API" : "org.keycloak.testsuite.oauth.RPInitiatedLogoutTest:void:logoutWithExpiredSession()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RefreshTokenTest.java",
    "signature" : "void tokenRefreshWithAccessTokenShouldReturnIdTokenWithAccessTokenHash()",
    "API" : "org.keycloak.testsuite.oauth.RefreshTokenTest:void:tokenRefreshWithAccessTokenShouldReturnIdTokenWithAccessTokenHash()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/RefreshTokenTest.java",
    "signature" : "void refreshTokenReuseTokenWithRefreshTokensRevokedAfterSingleReuse()",
    "API" : "org.keycloak.testsuite.oauth.RefreshTokenTest:void:refreshTokenReuseTokenWithRefreshTokensRevokedAfterSingleReuse()"
  } ]
}, {
  "project_slug" : "apache__activemq_CVE-2014-3576_5.10.2",
  "advisory_id" : "https://github.com/advisories/GHSA-3wfj-vh84-732p",
  "cve_id" : "CVE-2014-3576",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java",
    "signature" : "Response processControlCommand(ControlCommand)",
    "API" : "org.apache.activemq.broker.TransportConnection:Response:processControlCommand(ControlCommand)"
  }, {
    "file" : "activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java",
    "signature" : "Response processControlCommand(ControlCommand)",
    "API" : "org.apache.activemq.broker.TransportConnection:Response:processControlCommand(ControlCommand)"
  } ]
}, {
  "project_slug" : "nahsra__antisamy_CVE-2017-14735_1.5.6",
  "advisory_id" : "https://github.com/advisories/GHSA-q44v-xc3g-v7jq",
  "cve_id" : "CVE-2017-14735",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/validator/html/Policy.java",
    "signature" : "void parseRequireClosingTags(Element,List)",
    "API" : "org.owasp.validator.html.Policy:void:parseRequireClosingTags(Element,List)"
  }, {
    "file" : "src/main/java/org/owasp/validator/html/Policy.java",
    "signature" : "void parseAllowedEmptyTags(Element,List)",
    "API" : "org.owasp.validator.html.Policy:void:parseAllowedEmptyTags(Element,List)"
  }, {
    "file" : "src/main/java/org/owasp/validator/html/Policy.java",
    "signature" : "void parseGlobalAttributes(Element,Map,Map)",
    "API" : "org.owasp.validator.html.Policy:void:parseGlobalAttributes(Element,Map,Map)"
  }, {
    "file" : "src/main/java/org/owasp/validator/html/Policy.java",
    "signature" : "void parseCommonAttributes(Element,Map,Map)",
    "API" : "org.owasp.validator.html.Policy:void:parseCommonAttributes(Element,Map,Map)"
  }, {
    "file" : "src/main/java/org/owasp/validator/html/scan/AntiSamyDOMScanner.java",
    "signature" : "public CleanResults scan(String html)",
    "API" : "org.owasp.validator.html.scan.AntiSamyDOMScanner:public:CleanResults scan(String html)"
  }, {
    "file" : "src/main/java/org/owasp/validator/html/scan/AntiSamySAXScanner.java",
    "signature" : "CleanResults scan(Reader reader, Writer writer)",
    "API" : "org.owasp.validator.html.scan.AntiSamySAXScanner:CleanResults:scan(Reader reader, Writer writer)"
  }, {
    "file" : "src/test/java/org/owasp/validator/html/test/AntiSamyTest.java",
    "signature" : "void issue41()",
    "API" : "org.owasp.validator.html.test.AntiSamyTest:void:issue41()"
  } ]
}, {
  "project_slug" : "apache__incubator-dubbo_CVE-2021-30181_2.6.8",
  "advisory_id" : "https://github.com/advisories/GHSA-qmfc-6www-fjqw",
  "cve_id" : "CVE-2021-30181",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/script/ScriptRouter.java",
    "signature" : "String getRule(URL)",
    "API" : "org.apache.dubbo.rpc.cluster.router.script.ScriptRouter:String:getRule(URL)"
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/script/ScriptRouter.java",
    "signature" : "ScriptRouter(URL)",
    "API" : ""
  }, {
    "file" : "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/script/ScriptRouter.java",
    "signature" : "List<Invoker<T>> route(List<Invoker<T>> invokers, URL url, Invocation invocation)",
    "API" : "org.apache.dubbo.rpc.cluster.router.script.ScriptRouter:List<Invoker<T>>:route(List<Invoker<T>> invokers, URL url, Invocation invocation)"
  } ]
}, {
  "project_slug" : "jenkinsci__perfecto-plugin_CVE-2020-2261_1.17",
  "advisory_id" : "https://github.com/advisories/GHSA-jq84-6fmm-6qv6",
  "cve_id" : "CVE-2020-2261",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/io/plugins/perfecto/PerfectoBuildWrapper.java",
    "signature" : "String getTunnelId(String,String,String,BuildListener)",
    "API" : "io.plugins.perfecto.PerfectoBuildWrapper:String:getTunnelId(String,String,String,BuildListener)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/PerfectoBuildWrapper.java",
    "signature" : "Environment setUp(AbstractBuild,Launcher,BuildListener,Map,AbstractBuild,BuildListener)",
    "API" : "io.plugins.perfecto.PerfectoBuildWrapper:Environment:setUp(AbstractBuild,Launcher,BuildListener,Map,AbstractBuild,BuildListener)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/PerfectoBuildWrapper.java",
    "signature" : "PerfectoBuildWrapper(RunCondition,String,String,String,String,String,String,String)",
    "API" : ""
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "FormValidation doCheckUserName(String)",
    "API" : "io.plugins.perfecto.credentials.PerfectoCredentials:FormValidation:doCheckUserName(String)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "FormValidation doAuthenticate(String,String,String)",
    "API" : "io.plugins.perfecto.credentials.PerfectoCredentials:FormValidation:doAuthenticate(String,String,String)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "String migrateToCredentials(String,String,String,String)",
    "API" : "io.plugins.perfecto.credentials.PerfectoCredentials:String:migrateToCredentials(String,String,String,String)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "Secret getPassword()",
    "API" : "io.plugins.perfecto.credentials.PerfectoCredentials:Secret:getPassword()"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "FormValidation doCheckApiKey(String)",
    "API" : "io.plugins.perfecto.credentials.PerfectoCredentials:FormValidation:doCheckApiKey(String)"
  }, {
    "file" : "src/main/java/io/plugins/perfecto/credentials/PerfectoCredentials.java",
    "signature" : "PerfectoCredentials(CredentialsScope,String,String,String,String,String)",
    "API" : ""
  } ]
}, {
  "project_slug" : "keycloak__keycloak_CVE-2022-4361_21.1.1",
  "advisory_id" : "https://github.com/advisories/GHSA-3p62-6fjh-3p5h",
  "cve_id" : "CVE-2022-4361",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String decodeRedirectUri(String)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:decodeRedirectUri(String)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String validateRedirectUriWildcard(String)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:validateRedirectUriWildcard(String)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "boolean matchesRedirects(Set,String,boolean)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:boolean:matchesRedirects(Set,String,boolean)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String verifyRedirectUri(KeycloakSession,String,String,Set,boolean)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:verifyRedirectUri(KeycloakSession,String,String,Set,boolean)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "Set resolveValidRedirects(KeycloakSession,String,Set)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:Set:resolveValidRedirects(KeycloakSession,String,Set)"
  }, {
    "file" : "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java",
    "signature" : "String getNormalizedRedirectUri(String)",
    "API" : "org.keycloak.protocol.oidc.utils.RedirectUtils:String:getNormalizedRedirectUri(String)"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/AuthorizationCodeTest.java",
    "signature" : "void authorizationRequestFragmentResponseModeNotKept()",
    "API" : "org.keycloak.testsuite.oauth.AuthorizationCodeTest:void:authorizationRequestFragmentResponseModeNotKept()"
  } ]
}, {
  "project_slug" : "apache__camel_CVE-2019-0194_2.21.4",
  "advisory_id" : "https://github.com/advisories/GHSA-4wjq-69rc-8wcp",
  "cve_id" : "CVE-2019-0194",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "camel-core/src/main/java/org/apache/camel/component/file/GenericFileEndpoint.java",
    "signature" : "void configureMessage(GenericFile,Message)",
    "API" : "org.apache.camel.component.file.GenericFileEndpoint:void:configureMessage(GenericFile,Message)"
  }, {
    "file" : "camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java",
    "signature" : "String createTempFileName(Exchange,String)",
    "API" : "org.apache.camel.component.file.GenericFileProducer:String:createTempFileName(Exchange,String)"
  }, {
    "file" : "camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java",
    "signature" : "String createFileName(Exchange)",
    "API" : "org.apache.camel.component.file.GenericFileProducer:String:createFileName(Exchange)"
  }, {
    "file" : "camel-core/src/test/java/org/apache/camel/component/file/FileProducerExpressionTest.java",
    "signature" : "void testProducerComplexByExpression()",
    "API" : "org.apache.camel.component.file.FileProducerExpressionTest:void:testProducerComplexByExpression()"
  }, {
    "file" : "components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpProducerExpressionTest.java",
    "signature" : "void testProducerComplexByExpression()",
    "API" : "org.apache.camel.component.file.remote.FtpProducerExpressionTest:void:testProducerComplexByExpression()"
  } ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2019-10089_2.11.0.M4",
  "advisory_id" : "https://github.com/advisories/GHSA-3rx2-x6mx-grj3",
  "cve_id" : "CVE-2019-10089",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/render/WysiwygEditingRenderer.java",
    "signature" : "String getString()",
    "API" : "org.apache.wiki.render.WysiwygEditingRenderer:String:getString()"
  } ]
}, {
  "project_slug" : "apache__dolphinscheduler_CVE-2022-26884_2.0.5",
  "advisory_id" : "https://github.com/advisories/GHSA-vpgf-fgm8-gxr2",
  "cve_id" : "CVE-2022-26884",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/log/LoggerRequestProcessor.java",
    "signature" : "boolean checkPathSecurity(String)",
    "API" : "org.apache.dolphinscheduler.server.log.LoggerRequestProcessor:boolean:checkPathSecurity(String)"
  } ]
}, {
  "project_slug" : "nahsra__antisamy_CVE-2022-28367_1.6.5",
  "advisory_id" : "https://github.com/advisories/GHSA-3pqg-4rqg-pg9g",
  "cve_id" : "CVE-2022-28367",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/validator/html/scan/AntiSamyDOMScanner.java",
    "signature" : "boolean processStyleTag(Element,Node)",
    "API" : "org.owasp.validator.html.scan.AntiSamyDOMScanner:boolean:processStyleTag(Element,Node)"
  }, {
    "file" : "src/test/java/org/owasp/validator/html/test/AntiSamyTest.java",
    "signature" : "void testGithubIssue151()",
    "API" : "org.owasp.validator.html.test.AntiSamyTest:void:testGithubIssue151()"
  } ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2019-10076_2.11.0.M3",
  "advisory_id" : "https://github.com/advisories/GHSA-cxx2-fp39-rf3r",
  "cve_id" : "CVE-2019-10076",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/tags/LinkToTag.java",
    "signature" : "int doWikiStartTag()",
    "API" : "org.apache.wiki.tags.LinkToTag:int:doWikiStartTag()"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/tags/LinkToTag.java",
    "signature" : "void initTag()",
    "API" : "org.apache.wiki.tags.LinkToTag:void:initTag()"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/tags/LinkToTag.java",
    "signature" : "void setAccesskey(String)",
    "API" : "org.apache.wiki.tags.LinkToTag:void:setAccesskey(String)"
  } ]
}, {
  "project_slug" : "rhuss__jolokia_CVE-2018-1000129_1.4.0",
  "advisory_id" : "https://github.com/advisories/GHSA-hfpg-gqjw-779m",
  "cve_id" : "CVE-2018-1000129",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "void sendStreamingResponse(HttpServletResponse,String,JSONStreamAware)",
    "API" : "org.jolokia.http.AgentServlet:void:sendStreamingResponse(HttpServletResponse,String,JSONStreamAware)"
  }, {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "String getMimeType(HttpServletRequest)",
    "API" : "org.jolokia.http.AgentServlet:String:getMimeType(HttpServletRequest)"
  }, {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "void sendResponse(HttpServletResponse,HttpServletRequest,JSONAware)",
    "API" : "org.jolokia.http.AgentServlet:void:sendResponse(HttpServletResponse,HttpServletRequest,JSONAware)"
  }, {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "void sendAllJSON(HttpServletResponse,String,JSONAware)",
    "API" : "org.jolokia.http.AgentServlet:void:sendAllJSON(HttpServletResponse,String,JSONAware)"
  }, {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "boolean isStreamingEnabled(HttpServletRequest)",
    "API" : "org.jolokia.http.AgentServlet:boolean:isStreamingEnabled(HttpServletRequest)"
  }, {
    "file" : "agent/core/src/main/java/org/jolokia/http/AgentServlet.java",
    "signature" : "JSONAware handleSecurely(ServletRequestHandler,HttpServletRequest,HttpServletResponse)",
    "API" : "org.jolokia.http.AgentServlet:JSONAware:handleSecurely(ServletRequestHandler,HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "agent/core/src/test/java/org/jolokia/http/AgentServletTest.java",
    "signature" : "void debug()",
    "API" : "org.jolokia.http.AgentServletTest:void:debug()"
  }, {
    "file" : "agent/core/src/test/java/org/jolokia/http/AgentServletTest.java",
    "signature" : "boolean isRemoteAccessAllowed(String)",
    "API" : "org.jolokia.http.AgentServletTest:boolean:isRemoteAccessAllowed(String)"
  }, {
    "file" : "agent/core/src/test/java/org/jolokia/http/AgentServletTest.java",
    "signature" : "void setupAgentDetailsInitExpectations()",
    "API" : "org.jolokia.http.AgentServletTest:void:setupAgentDetailsInitExpectations()"
  }, {
    "file" : "agent/core/src/test/java/org/jolokia/http/AgentServletTest.java",
    "signature" : "void simpleGet()",
    "API" : "org.jolokia.http.AgentServletTest:void:simpleGet()"
  }, {
    "file" : "agent/jvm/src/main/java/org/jolokia/jvmagent/handler/JolokiaHttpHandler.java",
    "signature" : "void doHandle(HttpExchange)",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandler:void:doHandle(HttpExchange)"
  }, {
    "file" : "agent/jvm/src/main/java/org/jolokia/jvmagent/handler/JolokiaHttpHandler.java",
    "signature" : "void sendAllJSON(HttpExchange,ParsedUri,JSONAware)",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandler:void:sendAllJSON(HttpExchange,ParsedUri,JSONAware)"
  }, {
    "file" : "agent/jvm/src/main/java/org/jolokia/jvmagent/handler/JolokiaHttpHandler.java",
    "signature" : "LogHandler createLogHandler(String,String)",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandler:LogHandler:createLogHandler(String,String)"
  }, {
    "file" : "agent/jvm/src/main/java/org/jolokia/jvmagent/handler/JolokiaHttpHandler.java",
    "signature" : "String getHostName(InetSocketAddress)",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandler:String:getHostName(InetSocketAddress)"
  }, {
    "file" : "agent/jvm/src/test/java/org/jolokia/jvmagent/handler/JolokiaHttpHandlerTest.java",
    "signature" : "void customRestrictor()",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest:void:customRestrictor()"
  }, {
    "file" : "agent/jvm/src/test/java/org/jolokia/jvmagent/handler/JolokiaHttpHandlerTest.java",
    "signature" : "void testCallbackGet()",
    "API" : "org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest:void:testCallbackGet()"
  } ]
}, {
  "project_slug" : "srikanth-lingala__zip4j_CVE-2018-1002202_1.3.2",
  "advisory_id" : "https://github.com/advisories/GHSA-2rpm-4x8c-pvqg",
  "cve_id" : "CVE-2018-1002202",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/net/lingala/zip4j/tasks/AbstractExtractFileTask.java",
    "signature" : "void extractFile(ZipInputStream,FileHeader,String,String,ProgressMonitor)",
    "API" : "net.lingala.zip4j.tasks.AbstractExtractFileTask:void:extractFile(ZipInputStream,FileHeader,String,String,ProgressMonitor)"
  }, {
    "file" : "src/main/java/net/lingala/zip4j/tasks/AddFolderToZipTask.java",
    "signature" : "void setDefaultFolderPath(AddFolderToZipTaskParameters taskParameters)",
    "API" : "net.lingala.zip4j.tasks.AddFolderToZipTask:void:setDefaultFolderPath(AddFolderToZipTaskParameters taskParameters)"
  }, {
    "file" : "src/main/java/net/lingala/zip4j/tasks/AddFolderToZipTask.java",
    "signature" : "void setDefaultFolderPath(AddFolderToZipTaskParameters)",
    "API" : "net.lingala.zip4j.tasks.AddFolderToZipTask:void:setDefaultFolderPath(AddFolderToZipTaskParameters)"
  }, {
    "file" : "src/main/java/net/lingala/zip4j/util/FileUtils.java",
    "signature" : "List getSplitZipFiles(ZipModel)",
    "API" : "net.lingala.zip4j.util.FileUtils:List:getSplitZipFiles(ZipModel)"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/AddFilesToZipIT.java",
    "signature" : "void testAddFileWithDifferentFileNameSetsTheNewFileName()",
    "API" : "net.lingala.zip4j.AddFilesToZipIT:void:testAddFileWithDifferentFileNameSetsTheNewFileName()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFilesThrowsExceptionForWrongPasswordForZipStandardAndStore()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFilesThrowsExceptionForWrongPasswordForZipStandardAndStore()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllStoreAndNoEncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllStoreAndNoEncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllDeflateAndNoEncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllDeflateAndNoEncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllStoreAndZipStandardEncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllStoreAndZipStandardEncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFileWithFileHeaderWithAes128AndInDirectory()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFileWithFileHeaderWithAes128AndInDirectory()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFileWithFileHeaderWithAes256AndWithANewFileName()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFileWithFileHeaderWithAes256AndWithANewFileName()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFileWithFileNameWithZipStandardEncryption()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFileWithFileNameWithZipStandardEncryption()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFilesThrowsExceptionForWrongPasswordForZipStandardAndDeflate()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFilesThrowsExceptionForWrongPasswordForZipStandardAndDeflate()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFilesThrowsExceptionForWrongPasswordForAes()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFilesThrowsExceptionForWrongPasswordForAes()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFileWithFileNameWithZipStandardEncryptionAndNewFileName()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFileWithFileNameWithZipStandardEncryptionAndNewFileName()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFilesForZipFileWhileWithCorruptExtraDataRecordLength()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFilesForZipFileWhileWithCorruptExtraDataRecordLength()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllDeflateAndAes128EncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllDeflateAndAes128EncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllDeflateAndAes256EncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllDeflateAndAes256EncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractFileWithFileHeaderWithAes128()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractFileWithFileHeaderWithAes128()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllStoreAndAes128EncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllStoreAndAes128EncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllStoreAndAes256EncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllStoreAndAes256EncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/ExtractZipFileIT.java",
    "signature" : "void testExtractAllDeflateAndZipStandardEncryptionExtractsSuccessfully()",
    "API" : "net.lingala.zip4j.ExtractZipFileIT:void:testExtractAllDeflateAndZipStandardEncryptionExtractsSuccessfully()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/MiscZipFileIT.java",
    "signature" : "void testExtractFileDeletesOutputFileWhenWrongPassword()",
    "API" : "net.lingala.zip4j.MiscZipFileIT:void:testExtractFileDeletesOutputFileWhenWrongPassword()"
  }, {
    "file" : "src/test/java/net/lingala/zip4j/testutils/ZipFileVerifier.java",
    "signature" : "void verifyZipFileByExtractingAllFiles(File,char,File,int,boolean)",
    "API" : "net.lingala.zip4j.testutils.ZipFileVerifier:void:verifyZipFileByExtractingAllFiles(File,char,File,int,boolean)"
  } ]
}, {
  "project_slug" : "jenkinsci__workflow-cps-plugin_CVE-2022-25173_2646.v6ed3b5b01ff1",
  "advisory_id" : "https://github.com/advisories/GHSA-4m7p-55jm-3vwv",
  "cve_id" : "CVE-2022-25173",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsScmFlowDefinition.java",
    "signature" : "CpsScmFlowDefinition(SCM,String)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsScmFlowDefinition.java",
    "signature" : "CpsFlowExecution create(FlowExecutionOwner,TaskListener,List)",
    "API" : "org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition:CpsFlowExecution:create(FlowExecutionOwner,TaskListener,List)"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/cps/DSL.java",
    "signature" : "void logInterpolationWarnings(String,ArgumentsActionImpl,Set,EnvVars,Set,TaskListener)",
    "API" : "org.jenkinsci.plugins.workflow.cps.DSL:void:logInterpolationWarnings(String,ArgumentsActionImpl,Set,EnvVars,Set,TaskListener)"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsScmFlowDefinitionTest.java",
    "signature" : "void basics()",
    "API" : "org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinitionTest:void:basics()"
  }, {
    "file" : "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsScmFlowDefinition.java",
    "signature" : "",
    "API" : ""
  } ]
}, {
  "project_slug" : "jenkinsci__docker-commons-plugin_CVE-2022-20617_1.17",
  "advisory_id" : "https://github.com/advisories/GHSA-jpxj-vgq5-prjc",
  "cve_id" : "CVE-2022-20617",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/jenkinsci/plugins/docker/commons/credentials/DockerRegistryEndpoint.java",
    "signature" : "String imageName(String)",
    "API" : "org.jenkinsci.plugins.docker.commons.credentials.DockerRegistryEndpoint:String:imageName(String)"
  }, {
    "file" : "src/test/java/org/jenkinsci/plugins/docker/commons/credentials/DockerRegistryEndpointTest.java",
    "signature" : "void testParseFullyQualifiedImageName()",
    "API" : "org.jenkinsci.plugins.docker.commons.credentials.DockerRegistryEndpointTest:void:testParseFullyQualifiedImageName()"
  } ]
}, {
  "project_slug" : "apache__uima-uimaj_CVE-2022-32287_3.3.0",
  "advisory_id" : "https://github.com/advisories/GHSA-xgqr-5wqw-9fpv",
  "cve_id" : "CVE-2022-32287",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "File zipFile(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:File:zipFile(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "long extractDirectoryFromJar(JarFile,String,File)",
    "API" : "org.apache.uima.pear.util.FileUtil:long:extractDirectoryFromJar(JarFile,String,File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "File zipDirectory(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:File:zipDirectory(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "boolean accept(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:boolean:accept(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String getRelativePath(File,String)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:getRelativePath(File,String)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "ZipOutputStream zipDirectory(File,ZipOutputStream,File,File)",
    "API" : "org.apache.uima.pear.util.FileUtil:ZipOutputStream:zipDirectory(File,ZipOutputStream,File,File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "Collection createFileList(JarFile)",
    "API" : "org.apache.uima.pear.util.FileUtil:Collection:createFileList(JarFile)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "boolean deleteDirectory(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:boolean:deleteDirectory(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "DirFileFilter(String,String)",
    "API" : ""
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "long getFileSize(String)",
    "API" : "org.apache.uima.pear.util.FileUtil:long:getFileSize(String)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "boolean isAsciiStream(InputStream)",
    "API" : "org.apache.uima.pear.util.FileUtil:boolean:isAsciiStream(InputStream)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "Collection createDirList(JarFile)",
    "API" : "org.apache.uima.pear.util.FileUtil:Collection:createDirList(JarFile)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String loadTextFileFromJar(String,JarFile)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:loadTextFileFromJar(String,JarFile)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "boolean accept(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:boolean:accept(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "boolean moveFile(File,File)",
    "API" : "org.apache.uima.pear.util.FileUtil:boolean:moveFile(File,File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String loadListOfStrings(BufferedReader)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:loadListOfStrings(BufferedReader)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String localPathToFileUrl(String)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:localPathToFileUrl(String)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "int replaceStringInFile(File,String,String)",
    "API" : "org.apache.uima.pear.util.FileUtil:int:replaceStringInFile(File,String,String)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String loadTextFile(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:loadTextFile(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "int cleanUpDirectoryContent(File)",
    "API" : "org.apache.uima.pear.util.FileUtil:int:cleanUpDirectoryContent(File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String identifyUtfSignature(int,int)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:identifyUtfSignature(int,int)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "File zipFile(File,File)",
    "API" : "org.apache.uima.pear.util.FileUtil:File:zipFile(File,File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String computeRelativePath(File,File)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:computeRelativePath(File,File)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "File createTempFile(String,String)",
    "API" : "org.apache.uima.pear.util.FileUtil:File:createTempFile(String,String)"
  }, {
    "file" : "uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java",
    "signature" : "String loadTextFile(BufferedReader)",
    "API" : "org.apache.uima.pear.util.FileUtil:String:loadTextFile(BufferedReader)"
  } ]
}, {
  "project_slug" : "apache__camel_CVE-2018-8041_2.20.3",
  "advisory_id" : "https://github.com/advisories/GHSA-jv74-f9pj-xp3f",
  "cve_id" : "CVE-2018-8041",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java",
    "signature" : "void extractAttachmentsFromMultipart(Multipart,Map)",
    "API" : "org.apache.camel.component.mail.MailBinding:void:extractAttachmentsFromMultipart(Multipart,Map)"
  }, {
    "file" : "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java",
    "signature" : "void extractAttachmentsFromMultipart(Multipart,Map)",
    "API" : "org.apache.camel.component.mail.MailBinding:void:extractAttachmentsFromMultipart(Multipart,Map)"
  }, {
    "file" : "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java",
    "signature" : "void extractAttachmentsFromMultipart(Multipart,Map)",
    "API" : "org.apache.camel.component.mail.MailBinding:void:extractAttachmentsFromMultipart(Multipart,Map)"
  }, {
    "file" : "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java",
    "signature" : "void extractAttachmentsFromMultipart(Multipart,Map)",
    "API" : "org.apache.camel.component.mail.MailBinding:void:extractAttachmentsFromMultipart(Multipart,Map)"
  } ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2022-46907_2.11.3",
  "advisory_id" : "https://github.com/advisories/GHSA-qvq8-cw7f-m7m4",
  "cve_id" : "CVE-2022-46907",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/BugReportHandler.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.plugin.BugReportHandler:String:execute(Context,Map)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/InsertPage.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.plugin.InsertPage:String:execute(Context,Map)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/forms/FormOutput.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.forms.FormOutput:String:execute(Context,Map)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/forms/FormOpen.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.forms.FormOpen:String:execute(Context,Map)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/CurrentTimePlugin.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.plugin.CurrentTimePlugin:String:execute(Context,Map)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/Search.java",
    "signature" : "String execute(Context,Map)",
    "API" : "org.apache.wiki.plugin.Search:String:execute(Context,Map)"
  } ]
}, {
  "project_slug" : "xerial__sqlite-jdbc_CVE-2023-32697_3.41.2.1",
  "advisory_id" : "https://github.com/advisories/GHSA-6phf-6h5g-97j2",
  "cve_id" : "CVE-2023-32697",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/sqlite/SQLiteConnection.java",
    "signature" : "File extractResource(URL)",
    "API" : "org.sqlite.SQLiteConnection:File:extractResource(URL)"
  }, {
    "file" : "src/main/java/org/sqlite/SQLiteConnection.java",
    "signature" : "DB open(String url, String origFileName, Properties props)",
    "API" : "org.sqlite.SQLiteConnection:DB:open(String url, String origFileName, Properties props)"
  } ]
}, {
  "project_slug" : "perwendel__spark_CVE-2016-9177_2.5.1",
  "advisory_id" : "https://github.com/advisories/GHSA-89gc-6cw6-4vch",
  "cve_id" : "CVE-2016-9177",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/spark/resource/ClassPathResourceHandler.java",
    "signature" : "AbstractFileResolvingResource getResource(String)",
    "API" : "spark.resource.ClassPathResourceHandler:AbstractFileResolvingResource:getResource(String)"
  }, {
    "file" : "src/main/java/spark/resource/ExternalResourceHandler.java",
    "signature" : "AbstractFileResolvingResource getResource(String)",
    "API" : "spark.resource.ExternalResourceHandler:AbstractFileResolvingResource:getResource(String)"
  }, {
    "file" : "src/main/java/spark/staticfiles/StaticFilesConfiguration.java",
    "signature" : "boolean consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)",
    "API" : "spark.staticfiles.StaticFilesConfiguration:boolean:consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "src/main/java/spark/staticfiles/StaticFilesConfiguration.java",
    "signature" : "void configure(String)",
    "API" : "spark.staticfiles.StaticFilesConfiguration:void:configure(String)"
  }, {
    "file" : "src/main/java/spark/staticfiles/StaticFilesConfiguration.java",
    "signature" : "void setExpireTimeSeconds(long)",
    "API" : "spark.staticfiles.StaticFilesConfiguration:void:setExpireTimeSeconds(long)"
  }, {
    "file" : "src/main/java/spark/staticfiles/StaticFilesConfiguration.java",
    "signature" : "boolean configureJarCase(String,ClassPathResource)",
    "API" : "spark.staticfiles.StaticFilesConfiguration:boolean:configureJarCase(String,ClassPathResource)"
  }, {
    "file" : "src/main/java/spark/utils/StringUtils.java",
    "signature" : "String toString(byte,String)",
    "API" : "spark.utils.StringUtils:String:toString(byte,String)"
  }, {
    "file" : "src/test/java/spark/StaticFilesTest.java",
    "signature" : "void testCustomMimeType()",
    "API" : "spark.StaticFilesTest:void:testCustomMimeType()"
  } ]
}, {
  "project_slug" : "apache__flink_CVE-2020-17519_1.11.2",
  "advisory_id" : "https://github.com/advisories/GHSA-395w-qhqr-9fr6",
  "cve_id" : "CVE-2020-17519",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/cluster/JobManagerCustomLogHandler.java",
    "signature" : "File getFile(HandlerRequest)",
    "API" : "org.apache.flink.runtime.rest.handler.cluster.JobManagerCustomLogHandler:File:getFile(HandlerRequest)"
  } ]
}, {
  "project_slug" : "apache__dolphinscheduler_CVE-2023-49109_3.2.0",
  "advisory_id" : "https://github.com/advisories/GHSA-qwxx-xww6-8q8m",
  "cve_id" : "CVE-2023-49109",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/K8sNamespaceController.java",
    "signature" : "Result createNamespace(User,String,Long,Double,Integer)",
    "API" : "org.apache.dolphinscheduler.api.controller.K8sNamespaceController:Result:createNamespace(User,String,Long,Double,Integer)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/k8s/K8sClientService.java",
    "signature" : "ResourceQuota upsertNamespaceAndResourceToK8s(K8sNamespace,String)",
    "API" : "org.apache.dolphinscheduler.api.k8s.K8sClientService:ResourceQuota:upsertNamespaceAndResourceToK8s(K8sNamespace,String)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/k8s/K8sClientService.java",
    "signature" : "Optional deleteNamespaceToK8s(String,Long)",
    "API" : "org.apache.dolphinscheduler.api.k8s.K8sClientService:Optional:deleteNamespaceToK8s(String,Long)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/K8SNamespaceServiceImpl.java",
    "signature" : "Map updateK8sNamespace(User,int,String,Double,Integer)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.K8SNamespaceServiceImpl:Map:updateK8sNamespace(User,int,String,Double,Integer)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/K8SNamespaceServiceImpl.java",
    "signature" : "Result queryListPaging(User,String,Integer,Integer)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.K8SNamespaceServiceImpl:Result:queryListPaging(User,String,Integer,Integer)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/K8SNamespaceServiceImpl.java",
    "signature" : "Map createK8sNamespace(User,String,Long,Double,Integer)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.K8SNamespaceServiceImpl:Map:createK8sNamespace(User,String,Long,Double,Integer)"
  }, {
    "file" : "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/K8sNamespaceControllerTest.java",
    "signature" : "void createNamespace()",
    "API" : "org.apache.dolphinscheduler.api.controller.K8sNamespaceControllerTest:void:createNamespace()"
  }, {
    "file" : "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/K8sNamespaceControllerTest.java",
    "signature" : "void updateNamespace()",
    "API" : "org.apache.dolphinscheduler.api.controller.K8sNamespaceControllerTest:void:updateNamespace()"
  }, {
    "file" : "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/K8SNamespaceServiceTest.java",
    "signature" : "void createK8sNamespace()",
    "API" : "org.apache.dolphinscheduler.api.service.K8SNamespaceServiceTest:void:createK8sNamespace()"
  }, {
    "file" : "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/K8SNamespaceServiceTest.java",
    "signature" : "void setUp()",
    "API" : "org.apache.dolphinscheduler.api.service.K8SNamespaceServiceTest:void:setUp()"
  }, {
    "file" : "dolphinscheduler-dao/src/test/java/org/apache/dolphinscheduler/dao/mapper/K8sNamespaceMapperTest.java",
    "signature" : "K8sNamespace insertOne()",
    "API" : "org.apache.dolphinscheduler.dao.mapper.K8sNamespaceMapperTest:K8sNamespace:insertOne()"
  }, {
    "file" : "dolphinscheduler-dao/src/test/java/org/apache/dolphinscheduler/dao/mapper/K8sNamespaceMapperTest.java",
    "signature" : "void testUpdate()",
    "API" : "org.apache.dolphinscheduler.dao.mapper.K8sNamespaceMapperTest:void:testUpdate()"
  } ]
}, {
  "project_slug" : "wildfly__wildfly_CVE-2018-1047_11.0.0.Final",
  "advisory_id" : "https://github.com/advisories/GHSA-fmr4-w67p-vh8x",
  "cve_id" : "CVE-2018-1047",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/servlet/overlays/ServletResourceOverlaysTestCase.java",
    "signature" : "WebArchive single()",
    "API" : "org.jboss.as.test.integration.web.servlet.overlays.ServletResourceOverlaysTestCase:WebArchive:single()"
  }, {
    "file" : "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/servlet/overlays/ServletResourceOverlaysTestCase.java",
    "signature" : "void testLifeCycle()",
    "API" : "org.jboss.as.test.integration.web.servlet.overlays.ServletResourceOverlaysTestCase:void:testLifeCycle()"
  }, {
    "file" : "undertow/src/main/java/org/wildfly/extension/undertow/deployment/ServletResourceManager.java",
    "signature" : "Resource getResource(String)",
    "API" : "org.wildfly.extension.undertow.deployment.ServletResourceManager:Resource:getResource(String)"
  }, {
    "file" : "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/servlet/overlays/ServletResourceOverlaysTestCase.java",
    "signature" : "WebArchive single()",
    "API" : "org.jboss.as.test.integration.web.servlet.overlays.ServletResourceOverlaysTestCase:WebArchive:single()"
  }, {
    "file" : "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/servlet/overlays/ServletResourceOverlaysTestCase.java",
    "signature" : "void testPathAccess()",
    "API" : "org.jboss.as.test.integration.web.servlet.overlays.ServletResourceOverlaysTestCase:void:testPathAccess()"
  }, {
    "file" : "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/servlet/overlays/ServletResourceOverlaysTestCase.java",
    "signature" : "void testLifeCycle()",
    "API" : "org.jboss.as.test.integration.web.servlet.overlays.ServletResourceOverlaysTestCase:void:testLifeCycle()"
  } ]
}, {
  "project_slug" : "spring-cloud__spring-cloud-gateway_CVE-2022-22947_3.0.6",
  "advisory_id" : "https://github.com/advisories/GHSA-3gx9-37ww-9qw6",
  "cve_id" : "CVE-2022-22947",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/support/ShortcutConfigurable.java",
    "signature" : "List getConstructorResolvers()",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurable:List:getConstructorResolvers()"
  }, {
    "file" : "spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/support/ShortcutConfigurable.java",
    "signature" : "Object getValue(SpelExpressionParser parser, BeanFactory beanFactory, String entryValue)",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurable:Object:getValue(SpelExpressionParser parser, BeanFactory beanFactory, String entryValue)"
  }, {
    "file" : "spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/support/ShortcutConfigurableTests.java",
    "signature" : "void testNormalizeDefaultTypeWithSpel()",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurableTests:void:testNormalizeDefaultTypeWithSpel()"
  }, {
    "file" : "spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/support/ShortcutConfigurableTests.java",
    "signature" : "void testNormalizeDefaultTypeWithSpelAndInvalidInputFails()",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurableTests:void:testNormalizeDefaultTypeWithSpelAndInvalidInputFails()"
  }, {
    "file" : "spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/support/ShortcutConfigurableTests.java",
    "signature" : "void testNormalizeGatherListTailFlagFlagExists()",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurableTests:void:testNormalizeGatherListTailFlagFlagExists()"
  }, {
    "file" : "spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/support/ShortcutConfigurableTests.java",
    "signature" : "void assertListTailFlag(boolean)",
    "API" : "org.springframework.cloud.gateway.support.ShortcutConfigurableTests:void:assertListTailFlag(boolean)"
  } ]
}, {
  "project_slug" : "asf__nifi_CVE-2023-34468_1.21.0",
  "advisory_id" : "https://github.com/advisories/GHSA-xm2m-2q6h-22jw",
  "cve_id" : "CVE-2023-34468",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-dbcp-service/src/test/java/org/apache/nifi/dbcp/DBCPServiceTest.java",
    "signature" : "void testCustomValidateOfKerberosProperties()",
    "API" : "org.apache.nifi.dbcp.DBCPServiceTest:void:testCustomValidateOfKerberosProperties()"
  }, {
    "file" : "nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-hikari-dbcp-service/src/test/java/org/apache/nifi/dbcp/HikariCPConnectionPoolTest.java",
    "signature" : "void testConnectionTimeoutZero()",
    "API" : "org.apache.nifi.dbcp.HikariCPConnectionPoolTest:void:testConnectionTimeoutZero()"
  }, {
    "file" : "nifi-nar-bundles/nifi-extension-utils/nifi-dbcp-base/src/main/java/org/apache/nifi/dbcp/utils/DBCPProperties.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-bundle/nifi-hikari-dbcp-service/src/main/java/org/apache/nifi/dbcp/HikariCPConnectionPool.java",
    "signature" : "",
    "API" : ""
  } ]
}, {
  "project_slug" : "apache__myfaces_CVE-2011-4367_2.0.11",
  "advisory_id" : "https://github.com/advisories/GHSA-gjfx-9wx3-j6r7",
  "cve_id" : "CVE-2011-4367",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean isValidLibraryName(String)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:isValidLibraryName(String)"
  }, {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean validate(String,boolean)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:validate(String,boolean)"
  }, {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean validate(String,boolean)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:validate(String,boolean)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "boolean libraryExists(String)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:boolean:libraryExists(String)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "String getLocalePrefixForLocateResource()",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:String:getLocalePrefixForLocateResource()"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "Resource createResource(String,String,String)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:Resource:createResource(String,String,String)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "void setResourceHandlerSupport(ResourceHandlerSupport)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:void:setResourceHandlerSupport(ResourceHandlerSupport)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "void handleResourceRequest(FacesContext)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:void:handleResourceRequest(FacesContext)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "Resource createResource(String,String,String)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:Resource:createResource(String,String,String)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "boolean libraryExists(String)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:boolean:libraryExists(String)"
  }, {
    "file" : "impl/src/main/java/org/apache/myfaces/application/ResourceHandlerImpl.java",
    "signature" : "void handleResourceRequest(FacesContext)",
    "API" : "org.apache.myfaces.application.ResourceHandlerImpl:void:handleResourceRequest(FacesContext)"
  }, {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean isValidLibraryName(String)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:isValidLibraryName(String)"
  }, {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean isValidLocalePrefix(String)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:isValidLocalePrefix(String)"
  }, {
    "file" : "shared/src/test/java/org/apache/myfaces/shared/resource/ResourceValidationUtilsTest.java",
    "signature" : "void testLibraryNames()",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtilsTest:void:testLibraryNames()"
  }, {
    "file" : "shared/src/test/java/org/apache/myfaces/shared/resource/ResourceValidationUtilsTest.java",
    "signature" : "void testResourceNames()",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtilsTest:void:testResourceNames()"
  }, {
    "file" : "shared/src/main/java/org/apache/myfaces/shared/resource/ResourceValidationUtils.java",
    "signature" : "boolean validate(String,boolean)",
    "API" : "org.apache.myfaces.shared.resource.ResourceValidationUtils:boolean:validate(String,boolean)"
  } ]
}, {
  "project_slug" : "DSpace__DSpace_CVE-2022-31194_5.10",
  "advisory_id" : "https://github.com/advisories/GHSA-qp5m-c3m9-8q2p",
  "cve_id" : "CVE-2022-31194",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "File doPostResumable(HttpServletRequest)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:File:doPostResumable(HttpServletRequest)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "void doDSGet(Context,HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:void:doDSGet(Context,HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "void DoGetResumable(HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:void:DoGetResumable(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/util/FileUploadRequest.java",
    "signature" : "FileUploadRequest(HttpServletRequest)",
    "API" : ""
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "void DoGetResumable(HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:void:DoGetResumable(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "void doDSGet(Context,HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:void:doDSGet(Context,HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/SubmissionController.java",
    "signature" : "File doPostResumable(HttpServletRequest)",
    "API" : "org.dspace.app.webui.servlet.SubmissionController:File:doPostResumable(HttpServletRequest)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/util/FileUploadRequest.java",
    "signature" : "FileUploadRequest(HttpServletRequest)",
    "API" : ""
  } ]
}, {
  "project_slug" : "spring-projects__spring-security_CVE-2011-2732_2.0.6.RELEASE",
  "advisory_id" : "https://github.com/advisories/GHSA-5xm9-rf63-wj7h",
  "cve_id" : "CVE-2011-2732",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "web/src/main/java/org/springframework/security/web/authentication/AbstractAuthenticationTargetUrlRequestHandler.java",
    "signature" : "String getTargetUrlParameter()",
    "API" : "org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler:String:getTargetUrlParameter()"
  }, {
    "file" : "web/src/main/java/org/springframework/security/web/authentication/logout/SimpleUrlLogoutSuccessHandler.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "web/src/main/java/org/springframework/security/web/firewall/DefaultHttpFirewall.java",
    "signature" : "HttpServletResponse getFirewalledResponse(HttpServletResponse response)",
    "API" : "org.springframework.security.web.firewall.DefaultHttpFirewall:HttpServletResponse:getFirewalledResponse(HttpServletResponse response)"
  } ]
}, {
  "project_slug" : "apache__mina-sshd_CVE-2023-35887_2.9.2",
  "advisory_id" : "https://github.com/advisories/GHSA-mjmq-gwgm-5qhm",
  "cve_id" : "CVE-2023-35887",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/CliSupport.java",
    "signature" : "M setupIoServiceFactory(M,Map,PrintStream,PrintStream,String,IoConnector,SocketAddress,SocketAddress,IoConnector,SocketAddress,SocketAddress,Throwable,IoAcceptor,SocketAddress,SocketAddress,IoAcceptor,SocketAddress,SocketAddress,Throwable)",
    "API" : "org.apache.sshd.cli.CliSupport:M:setupIoServiceFactory(M,Map,PrintStream,PrintStream,String,IoConnector,SocketAddress,SocketAddress,IoConnector,SocketAddress,SocketAddress,Throwable,IoAcceptor,SocketAddress,SocketAddress,IoAcceptor,SocketAddress,SocketAddress,Throwable)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/client/SshClientCliSupport.java",
    "signature" : "List setupMacs(String,String,List,PrintStream)",
    "API" : "org.apache.sshd.cli.client.SshClientCliSupport:List:setupMacs(String,String,List,PrintStream)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/client/SshClientCliSupport.java",
    "signature" : "ServerKeyVerifier setupServerKeyVerifier(ClientAuthenticationManager,Map,BufferedReader,PrintStream,PrintStream)",
    "API" : "org.apache.sshd.cli.client.SshClientCliSupport:ServerKeyVerifier:setupServerKeyVerifier(ClientAuthenticationManager,Map,BufferedReader,PrintStream,PrintStream)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/client/SshClientCliSupport.java",
    "signature" : "ClientSession setupClientSession(String,BufferedReader,PrintStream,PrintStream,String)",
    "API" : "org.apache.sshd.cli.client.SshClientCliSupport:ClientSession:setupClientSession(String,BufferedReader,PrintStream,PrintStream,String)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/client/SshClientCliSupport.java",
    "signature" : "List setupCompressions(PropertyResolver,PrintStream)",
    "API" : "org.apache.sshd.cli.client.SshClientCliSupport:List:setupCompressions(PropertyResolver,PrintStream)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/client/SshKeyScanMain.java",
    "signature" : "S initializeScanner(S,Collection)",
    "API" : "org.apache.sshd.cli.client.SshKeyScanMain:S:initializeScanner(S,Collection)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/server/SshServerCliSupport.java",
    "signature" : "List resolveServerSubsystems(PrintStream,PropertyResolver)",
    "API" : "org.apache.sshd.cli.server.SshServerCliSupport:List:resolveServerSubsystems(PrintStream,PropertyResolver)"
  }, {
    "file" : "sshd-cli/src/main/java/org/apache/sshd/cli/server/SshServerMain.java",
    "signature" : "void main(String)",
    "API" : "org.apache.sshd.cli.server.SshServerMain:void:main(String)"
  }, {
    "file" : "sshd-cli/src/test/java/org/apache/sshd/cli/server/SshFsMounter.java",
    "signature" : "void main(String)",
    "API" : "org.apache.sshd.cli.server.SshFsMounter:void:main(String)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystem.java",
    "signature" : "Iterable getFileStores()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystem:Iterable:getFileStores()"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path unroot(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:unroot(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "DirectoryStream newDirectoryStream(Path,DirectoryStream)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:DirectoryStream:newDirectoryStream(Path,DirectoryStream)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path resolveLocalPath(RootedPath)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:resolveLocalPath(RootedPath)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "DirectoryStream root(RootedFileSystem,DirectoryStream)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:DirectoryStream:root(RootedFileSystem,DirectoryStream)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path readSymbolicLink(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:readSymbolicLink(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "RootedFileSystem getFileSystem(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:RootedFileSystem:getFileSystem(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "boolean isHidden(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:boolean:isHidden(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "OutputStream newOutputStream(Path,OpenOption)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:OutputStream:newOutputStream(Path,OpenOption)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "void copy(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:void:copy(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "boolean deleteIfExists(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:boolean:deleteIfExists(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/util/BaseFileSystem.java",
    "signature" : "T getPath(String,String)",
    "API" : "org.apache.sshd.common.file.util.BaseFileSystem:T:getPath(String,String)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/util/BaseFileSystem.java",
    "signature" : "PathMatcher getPathMatcher(String)",
    "API" : "org.apache.sshd.common.file.util.BaseFileSystem:PathMatcher:getPathMatcher(String)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/util/io/IoUtils.java",
    "signature" : "int read(InputStream,byte,int,int)",
    "API" : "org.apache.sshd.common.util.io.IoUtils:int:read(InputStream,byte,int,int)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/util/io/IoUtils.java",
    "signature" : "Boolean checkFileExists(Path,LinkOption)",
    "API" : "org.apache.sshd.common.util.io.IoUtils:Boolean:checkFileExists(Path,LinkOption)"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "void testRoot()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:void:testRoot()"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "byte readFile(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:byte:readFile(Path)"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "void testMkdir()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:void:testMkdir()"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/util/test/CommonTestSupportUtils.java",
    "signature" : "Path deleteRecursive(Path,LinkOption)",
    "API" : "org.apache.sshd.util.test.CommonTestSupportUtils:Path:deleteRecursive(Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/client/fs/SftpFileSystemProvider.java",
    "signature" : "void move(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.sftp.client.fs.SftpFileSystemProvider:void:move(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/client/fs/SftpFileSystemProvider.java",
    "signature" : "void copy(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.sftp.client.fs.SftpFileSystemProvider:void:copy(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void writeDirEntry(int,DirectoryHandle,Map,Buffer,int,Path,String,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:writeDirEntry(int,DirectoryHandle,Map,Buffer,int,Path,String,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap handleUnknownStatusFileAttributes(Path,int,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:handleUnknownStatusFileAttributes(Path,int,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveDirectory(int,String,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveDirectory(int,String,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void setFileAttributes(Path,Map,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:setFileAttributes(Path,Map,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "Map doStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:Map:doStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap getAttributes(Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:getAttributes(Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doFStat(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doFStat(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "Map doLStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:Map:doLStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRealPath(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRealPath(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap resolveReportedFileAttributes(Path,int,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:resolveReportedFileAttributes(Path,int,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doSetStat(int,String,int,String,Map,Boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doSetStat(int,String,int,String,Map,Boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doMakeDirectory(int,String,Map,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doMakeDirectory(int,String,Map,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doSetStat(Buffer,int,String,int,Boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doSetStat(Buffer,int,String,int,Boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemove(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemove(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveDirectory(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveDirectory(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "E signalRemovalPreConditionFailure(int,String,Path,E,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:E:signalRemovalPreConditionFailure(int,String,Path,E,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "String getLongName(Path,String,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:String:getLongName(Path,String,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "SimpleImmutableEntry validateRealPath(int,String,Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:SimpleImmutableEntry:validateRealPath(int,String,Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveFile(int,String,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveFile(int,String,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "void doReadDir(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:void:doReadDir(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "void doWrite(int,String,long,int,byte,int,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:void:doWrite(int,String,long,int,byte,int,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "Map doFStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:Map:doFStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "String doOpenDir(int,String,Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:String:doOpenDir(int,String,Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpTest.java",
    "signature" : "void testSftpFileSystemAccessor(SftpSubsystemProxy,FileHandle,Path,String,Set,FileAttribute,SftpSubsystemProxy,DirectoryHandle,Path,String)",
    "API" : "org.apache.sshd.sftp.client.SftpTest:void:testSftpFileSystemAccessor(SftpSubsystemProxy,FileHandle,Path,String,Set,FileAttribute,SftpSubsystemProxy,DirectoryHandle,Path,String)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpTest.java",
    "signature" : "void testCannotEscapeRoot(boolean)",
    "API" : "org.apache.sshd.sftp.client.SftpTest:void:testCannotEscapeRoot(boolean)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpVersionsTest.java",
    "signature" : "void testSftpExtensionsEncodeDecode(ChannelSession,Path,int,LinkOption,Path,Map,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)",
    "API" : "org.apache.sshd.sftp.client.SftpVersionsTest:void:testSftpExtensionsEncodeDecode(ChannelSession,Path,int,LinkOption,Path,Map,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpVersionsTest.java",
    "signature" : "void testSftpACLEncodeDecode(ChannelSession,Path,int,LinkOption,Path,List,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)",
    "API" : "org.apache.sshd.sftp.client.SftpVersionsTest:void:testSftpACLEncodeDecode(ChannelSession,Path,int,LinkOption,Path,List,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystem.java",
    "signature" : "Iterable getFileStores()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystem:Iterable:getFileStores()"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "boolean isHidden(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:boolean:isHidden(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path resolveLocalPath(RootedPath)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:resolveLocalPath(RootedPath)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "DirectoryStream newDirectoryStream(Path,DirectoryStream)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:DirectoryStream:newDirectoryStream(Path,DirectoryStream)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "RootedFileSystem getFileSystem(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:RootedFileSystem:getFileSystem(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "DirectoryStream root(RootedFileSystem,DirectoryStream)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:DirectoryStream:root(RootedFileSystem,DirectoryStream)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "void copy(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:void:copy(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "OutputStream newOutputStream(Path,OpenOption)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:OutputStream:newOutputStream(Path,OpenOption)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path readSymbolicLink(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:readSymbolicLink(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "boolean deleteIfExists(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:boolean:deleteIfExists(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/root/RootedFileSystemProvider.java",
    "signature" : "Path unroot(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProvider:Path:unroot(Path)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/util/BaseFileSystem.java",
    "signature" : "PathMatcher getPathMatcher(String)",
    "API" : "org.apache.sshd.common.file.util.BaseFileSystem:PathMatcher:getPathMatcher(String)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/file/util/BaseFileSystem.java",
    "signature" : "T getPath(String,String)",
    "API" : "org.apache.sshd.common.file.util.BaseFileSystem:T:getPath(String,String)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/util/io/IoUtils.java",
    "signature" : "int read(InputStream,byte,int,int)",
    "API" : "org.apache.sshd.common.util.io.IoUtils:int:read(InputStream,byte,int,int)"
  }, {
    "file" : "sshd-common/src/main/java/org/apache/sshd/common/util/io/IoUtils.java",
    "signature" : "Boolean checkFileExists(Path,LinkOption)",
    "API" : "org.apache.sshd.common.util.io.IoUtils:Boolean:checkFileExists(Path,LinkOption)"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "byte readFile(Path)",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:byte:readFile(Path)"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "void testRoot()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:void:testRoot()"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/common/file/root/RootedFileSystemProviderTest.java",
    "signature" : "void testMkdir()",
    "API" : "org.apache.sshd.common.file.root.RootedFileSystemProviderTest:void:testMkdir()"
  }, {
    "file" : "sshd-common/src/test/java/org/apache/sshd/util/test/CommonTestSupportUtils.java",
    "signature" : "Path deleteRecursive(Path,LinkOption)",
    "API" : "org.apache.sshd.util.test.CommonTestSupportUtils:Path:deleteRecursive(Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/client/fs/SftpFileSystemProvider.java",
    "signature" : "void copy(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.sftp.client.fs.SftpFileSystemProvider:void:copy(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/client/fs/SftpFileSystemProvider.java",
    "signature" : "void move(Path,Path,CopyOption)",
    "API" : "org.apache.sshd.sftp.client.fs.SftpFileSystemProvider:void:move(Path,Path,CopyOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "E signalRemovalPreConditionFailure(int,String,Path,E,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:E:signalRemovalPreConditionFailure(int,String,Path,E,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doSetStat(int,String,int,String,Map,Boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doSetStat(int,String,int,String,Map,Boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "String getLongName(Path,String,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:String:getLongName(Path,String,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRealPath(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRealPath(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveFile(int,String,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveFile(int,String,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doFStat(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doFStat(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap getAttributes(Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:getAttributes(Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveDirectory(int,String,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveDirectory(int,String,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemoveDirectory(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemoveDirectory(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doSetStat(Buffer,int,String,int,Boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doSetStat(Buffer,int,String,int,Boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doRemove(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doRemove(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "SimpleImmutableEntry validateRealPath(int,String,Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:SimpleImmutableEntry:validateRealPath(int,String,Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void writeDirEntry(int,DirectoryHandle,Map,Buffer,int,Path,String,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:writeDirEntry(int,DirectoryHandle,Map,Buffer,int,Path,String,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap resolveReportedFileAttributes(Path,int,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:resolveReportedFileAttributes(Path,int,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "Map doStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:Map:doStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "NavigableMap handleUnknownStatusFileAttributes(Path,int,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:NavigableMap:handleUnknownStatusFileAttributes(Path,int,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void doMakeDirectory(int,String,Map,boolean)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:doMakeDirectory(int,String,Map,boolean)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "Map doLStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:Map:doLStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/AbstractSftpSubsystemHelper.java",
    "signature" : "void setFileAttributes(Path,Map,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.AbstractSftpSubsystemHelper:void:setFileAttributes(Path,Map,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "void doReadDir(Buffer,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:void:doReadDir(Buffer,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "void doWrite(int,String,long,int,byte,int,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:void:doWrite(int,String,long,int,byte,int,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "Map doFStat(int,String,int)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:Map:doFStat(int,String,int)"
  }, {
    "file" : "sshd-sftp/src/main/java/org/apache/sshd/sftp/server/SftpSubsystem.java",
    "signature" : "String doOpenDir(int,String,Path,LinkOption)",
    "API" : "org.apache.sshd.sftp.server.SftpSubsystem:String:doOpenDir(int,String,Path,LinkOption)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpTest.java",
    "signature" : "void testSftpFileSystemAccessor(SftpSubsystemProxy,FileHandle,Path,String,Set,FileAttribute,SftpSubsystemProxy,DirectoryHandle,Path,String)",
    "API" : "org.apache.sshd.sftp.client.SftpTest:void:testSftpFileSystemAccessor(SftpSubsystemProxy,FileHandle,Path,String,Set,FileAttribute,SftpSubsystemProxy,DirectoryHandle,Path,String)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpTest.java",
    "signature" : "void testCannotEscapeRoot(boolean)",
    "API" : "org.apache.sshd.sftp.client.SftpTest:void:testCannotEscapeRoot(boolean)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpVersionsTest.java",
    "signature" : "void testSftpACLEncodeDecode(ChannelSession,Path,int,LinkOption,Path,List,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)",
    "API" : "org.apache.sshd.sftp.client.SftpVersionsTest:void:testSftpACLEncodeDecode(ChannelSession,Path,int,LinkOption,Path,List,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)"
  }, {
    "file" : "sshd-sftp/src/test/java/org/apache/sshd/sftp/client/SftpVersionsTest.java",
    "signature" : "void testSftpExtensionsEncodeDecode(ChannelSession,Path,int,LinkOption,Path,Map,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)",
    "API" : "org.apache.sshd.sftp.client.SftpVersionsTest:void:testSftpExtensionsEncodeDecode(ChannelSession,Path,int,LinkOption,Path,Map,LinkOption,ServerSession,Path,Map,ServerSession,Path,Map,Throwable)"
  } ]
}, {
  "project_slug" : "apache__shiro_CVE-2023-34478_1.11.0",
  "advisory_id" : "https://github.com/advisories/GHSA-pmhc-2g4f-85cg",
  "cve_id" : "CVE-2023-34478",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "void setBlockSemicolon(boolean)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:void:setBlockSemicolon(boolean)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean containsSemicolon(String)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:containsSemicolon(String)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean onAccessDenied(ServletRequest,ServletResponse)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:onAccessDenied(ServletRequest,ServletResponse)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean isValid(String)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:isValid(String)"
  } ]
}, {
  "project_slug" : "asf__commons-io_CVE-2021-29425_2.6",
  "advisory_id" : "https://github.com/advisories/GHSA-gwrp-pvrq-jmwv",
  "cve_id" : "CVE-2021-29425",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
    "signature" : "void testNormalize_with_nullbytes()",
    "API" : "org.apache.commons.io.FilenameUtilsTestCase:void:testNormalize_with_nullbytes()"
  }, {
    "file" : "src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
    "signature" : "void testNormalize()",
    "API" : "org.apache.commons.io.FilenameUtilsTestCase:void:testNormalize()"
  } ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2019-10078_2.11.0.M3",
  "advisory_id" : "https://github.com/advisories/GHSA-hp5r-mhgp-56c9",
  "cve_id" : "CVE-2019-10078",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/ReferredPagesPlugin.java",
    "signature" : "void handleLinks(WikiContext,Collection,int,String)",
    "API" : "org.apache.wiki.plugin.ReferredPagesPlugin:void:handleLinks(WikiContext,Collection,int,String)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/plugin/ReferredPagesPlugin.java",
    "signature" : "String execute(WikiContext,Map)",
    "API" : "org.apache.wiki.plugin.ReferredPagesPlugin:String:execute(WikiContext,Map)"
  } ]
}, {
  "project_slug" : "codehaus-plexus__plexus-archiver_CVE-2018-1002200_3.5",
  "advisory_id" : "https://github.com/advisories/GHSA-hcxq-x77q-3469",
  "cve_id" : "CVE-2018-1002200",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java",
    "signature" : "void extractFile(File,File,InputStream,String,Date,boolean,Integer,String)",
    "API" : "org.codehaus.plexus.archiver.AbstractUnArchiver:void:extractFile(File,File,InputStream,String,Date,boolean,Integer,String)"
  } ]
}, {
  "project_slug" : "codehaus-plexus__plexus-archiver_CVE-2023-37460_4.7.1",
  "advisory_id" : "https://github.com/advisories/GHSA-wh3p-fphp-9h2m",
  "cve_id" : "CVE-2023-37460",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java",
    "signature" : "void extractFile(File,File,InputStream,String,Date,boolean,Integer,String,FileMapper)",
    "API" : "org.codehaus.plexus.archiver.AbstractUnArchiver:void:extractFile(File,File,InputStream,String,Date,boolean,Integer,String,FileMapper)"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/archiver/SymlinkTest.java",
    "signature" : "void testSymlinkTar()",
    "API" : "org.codehaus.plexus.archiver.SymlinkTest:void:testSymlinkTar()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/archiver/SymlinkTest.java",
    "signature" : "void testSymlinkDirArchiver()",
    "API" : "org.codehaus.plexus.archiver.SymlinkTest:void:testSymlinkDirArchiver()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/archiver/SymlinkTest.java",
    "signature" : "void testSymlinkZip()",
    "API" : "org.codehaus.plexus.archiver.SymlinkTest:void:testSymlinkZip()"
  }, {
    "file" : "src/test/java/org/codehaus/plexus/archiver/zip/ZipArchiverTest.java",
    "signature" : "long toLocalTimeZone(long)",
    "API" : "org.codehaus.plexus.archiver.zip.ZipArchiverTest:long:toLocalTimeZone(long)"
  } ]
}, {
  "project_slug" : "Graylog2__graylog2-server_CVE-2023-41044_5.1.2",
  "advisory_id" : "https://github.com/advisories/GHSA-2q4p-f6gf-mqr5",
  "cve_id" : "CVE-2023-41044",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "graylog2-server/src/main/java/org/graylog2/rest/resources/system/debug/bundle/SupportBundleService.java",
    "signature" : "void downloadBundle(String,OutputStream)",
    "API" : "org.graylog2.rest.resources.system.debug.bundle.SupportBundleService:void:downloadBundle(String,OutputStream)"
  }, {
    "file" : "graylog2-server/src/main/java/org/graylog2/rest/resources/system/debug/bundle/SupportBundleService.java",
    "signature" : "void ensureFileWithinBundleDir(Path, String)",
    "API" : "org.graylog2.rest.resources.system.debug.bundle.SupportBundleService:void:ensureFileWithinBundleDir(Path, String)"
  }, {
    "file" : "graylog2-server/src/main/java/org/graylog2/rest/resources/system/debug/bundle/SupportBundleService.java",
    "signature" : "void deleteBundle(String)",
    "API" : "org.graylog2.rest.resources.system.debug.bundle.SupportBundleService:void:deleteBundle(String)"
  } ]
}, {
  "project_slug" : "x-stream__xstream_CVE-2020-26217_1.4.14-java7",
  "advisory_id" : "https://github.com/advisories/GHSA-mw36-7c6c-q4q2",
  "cve_id" : "CVE-2020-26217",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "DSpace__DSpace_CVE-2016-10726_4.4",
  "advisory_id" : "https://github.com/advisories/GHSA-4m9r-5gqp-7j82",
  "cve_id" : "CVE-2016-10726",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "dspace-xmlui/src/main/java/org/dspace/app/xmlui/cocoon/SafeResourceReader.java",
    "signature" : "void setup(SourceResolver,Map,String,Parameters)",
    "API" : "org.dspace.app.xmlui.cocoon.SafeResourceReader:void:setup(SourceResolver,Map,String,Parameters)"
  } ]
}, {
  "project_slug" : "asf__nifi_CVE-2023-36542_1.22.0",
  "advisory_id" : "https://github.com/advisories/GHSA-r969-8v3h-23v9",
  "cve_id" : "CVE-2023-36542",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "nifi-nar-bundles/nifi-jms-bundle/nifi-jms-processors/src/main/java/org/apache/nifi/jms/cf/JMSConnectionFactoryProvider.java",
    "signature" : "PropertyDescriptor getSupportedDynamicPropertyDescriptor(String)",
    "API" : "org.apache.nifi.jms.cf.JMSConnectionFactoryProvider:PropertyDescriptor:getSupportedDynamicPropertyDescriptor(String)"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-commons_CVE-2023-29528_14.9-rc-1",
  "advisory_id" : "https://github.com/advisories/GHSA-x37v-36wv-6v6h",
  "cve_id" : "CVE-2023-29528",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
    "signature" : "TrimAttributeCleanerTransformations getDefaultCleanerTransformations(HTMLCleanerConfiguration)",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleaner:TrimAttributeCleanerTransformations:getDefaultCleanerTransformations(HTMLCleanerConfiguration)"
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
    "signature" : "CleanerProperties getDefaultCleanerProperties(HTMLCleanerConfiguration)",
    "API" : "org.xwiki.xml.internal.html.DefaultHTMLCleaner:CleanerProperties:getDefaultCleanerProperties(HTMLCleanerConfiguration)"
  } ]
}, {
  "project_slug" : "vert-x3__vertx-web_CVE-2018-12542_3.5.3.CR1",
  "advisory_id" : "https://github.com/advisories/GHSA-h39x-m55c-v55h",
  "cve_id" : "CVE-2018-12542",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
    "signature" : "void handle(RoutingContext)",
    "API" : "io.vertx.ext.web.handler.impl.StaticHandlerImpl:void:handle(RoutingContext)"
  }, {
    "file" : "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
    "signature" : "void sendStatic(RoutingContext,String)",
    "API" : "io.vertx.ext.web.handler.impl.StaticHandlerImpl:void:sendStatic(RoutingContext,String)"
  }, {
    "file" : "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
    "signature" : "void testHandlerAfter()",
    "API" : "io.vertx.ext.web.handler.StaticHandlerTest:void:testHandlerAfter()"
  }, {
    "file" : "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
    "signature" : "long toDateTime(String)",
    "API" : "io.vertx.ext.web.handler.StaticHandlerTest:long:toDateTime(String)"
  } ]
}, {
  "project_slug" : "square__retrofit_CVE-2018-1000850_2.4.0",
  "advisory_id" : "https://github.com/advisories/GHSA-8p8g-f9vg-r7xr",
  "cve_id" : "CVE-2018-1000850",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "retrofit/src/main/java/retrofit2/RequestBuilder.java",
    "signature" : "RequestBuilder(String,HttpUrl,String,Headers,MediaType,boolean,boolean,boolean)",
    "API" : ""
  }, {
    "file" : "retrofit/src/main/java/retrofit2/RequestBuilder.java",
    "signature" : "void addPathParam(String,String,boolean)",
    "API" : "retrofit2.RequestBuilder:void:addPathParam(String,String,boolean)"
  }, {
    "file" : "retrofit/src/main/java/retrofit2/RequestBuilder.java",
    "signature" : "String canonicalizeForPath(String,boolean)",
    "API" : "retrofit2.RequestBuilder:String:canonicalizeForPath(String,boolean)"
  }, {
    "file" : "retrofit/src/main/java/retrofit2/RequestBuilder.java",
    "signature" : "void canonicalizeForPath(Buffer,String,int,int,boolean)",
    "API" : "retrofit2.RequestBuilder:void:canonicalizeForPath(Buffer,String,int,int,boolean)"
  }, {
    "file" : "retrofit/src/test/java/retrofit2/RequestFactoryTest.java",
    "signature" : "Call method()",
    "API" : "retrofit2.RequestFactoryTest:Call:method()"
  }, {
    "file" : "retrofit/src/test/java/retrofit2/RequestFactoryTest.java",
    "signature" : "void getWithQuery()",
    "API" : "retrofit2.RequestFactoryTest:void:getWithQuery()"
  }, {
    "file" : "retrofit/src/test/java/retrofit2/RequestFactoryTest.java",
    "signature" : "void getWithEncodedPathStillPreventsRequestSplitting(String)",
    "API" : "retrofit2.RequestFactoryTest:void:getWithEncodedPathStillPreventsRequestSplitting(String)"
  } ]
}, {
  "project_slug" : "DSpace__DSpace_CVE-2022-31195_5.10",
  "advisory_id" : "https://github.com/advisories/GHSA-8rmh-55h4-93h5",
  "cve_id" : "CVE-2022-31195",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "dspace-api/src/main/java/org/dspace/app/itemimport/ItemImport.java",
    "signature" : "String unzip(File,String)",
    "API" : "org.dspace.app.itemimport.ItemImport:String:unzip(File,String)"
  }, {
    "file" : "dspace-api/src/main/java/org/dspace/app/itemimport/ItemImportServiceImpl.java",
    "signature" : "String unzip(File,String)",
    "API" : "org.dspace.app.itemimport.ItemImportServiceImpl:String:unzip(File,String)"
  } ]
}, {
  "project_slug" : "asf__cxf_CVE-2019-17573_3.2.11",
  "advisory_id" : "https://github.com/advisories/GHSA-f93p-f762-vr53",
  "cve_id" : "CVE-2019-17573",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "void writeRESTfulEndpoint(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void:writeRESTfulEndpoint(PrintWriter,String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "void writeApiSpec(String,Bus,PrintWriter,String,String)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void:writeApiSpec(String,Bus,PrintWriter,String,String)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "String getExtensionEndpointAddress(String,Map)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:String:getExtensionEndpointAddress(String,Map)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/FormattedServiceListWriter.java",
    "signature" : "void writerSoapEndpoint(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void:writerSoapEndpoint(PrintWriter,String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/UnformattedServiceListWriter.java",
    "signature" : "void writeUnformattedSOAPEndpoints(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void:writeUnformattedSOAPEndpoints(PrintWriter,String,AbstractDestination)"
  }, {
    "file" : "rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/UnformattedServiceListWriter.java",
    "signature" : "void writeUnformattedRESTfulEndpoints(PrintWriter,String,AbstractDestination)",
    "API" : "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void:writeUnformattedRESTfulEndpoints(PrintWriter,String,AbstractDestination)"
  } ]
}, {
  "project_slug" : "DSpace__DSpace_CVE-2022-31192_5.10",
  "advisory_id" : "https://github.com/advisories/GHSA-4wm8-c2vv-xrpq",
  "cve_id" : "CVE-2022-31192",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/RequestItemServlet.java",
    "signature" : "void processForm(Context,HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.RequestItemServlet:void:processForm(Context,HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/util/RequestItemManager.java",
    "signature" : "String getLinkTokenEmail(Context,String,int,String,String,boolean)",
    "API" : "org.dspace.app.webui.util.RequestItemManager:String:getLinkTokenEmail(Context,String,int,String,String,boolean)"
  }, {
    "file" : "dspace-jspui/src/main/java/org/dspace/app/webui/servlet/ControlledVocabularyServlet.java",
    "signature" : "void doDSGet(Context,HttpServletRequest,HttpServletResponse)",
    "API" : "org.dspace.app.webui.servlet.ControlledVocabularyServlet:void:doDSGet(Context,HttpServletRequest,HttpServletResponse)"
  } ]
}, {
  "project_slug" : "spring-projects__spring-framework_CVE-2022-22965_5.2.19.RELEASE",
  "advisory_id" : "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
  "cve_id" : "CVE-2022-22965",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
    "signature" : "CachedIntrospectionResults(Class)",
    "API" : ""
  }, {
    "file" : "spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
    "signature" : "void introspectInterfaces(Class,Class,Set)",
    "API" : "org.springframework.beans.CachedIntrospectionResults:void:introspectInterfaces(Class,Class,Set)"
  } ]
}, {
  "project_slug" : "xwiki__xwiki-commons_CVE-2023-36471_14.10.5",
  "advisory_id" : "https://github.com/advisories/GHSA-6pqf-c99p-758v",
  "cve_id" : "CVE-2023-36471",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/HTMLDefinitions.java",
    "signature" : "HTMLDefinitions()",
    "API" : ""
  }, {
    "file" : "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/SecureHTMLElementSanitizerTest.java",
    "signature" : "void extraAllowedTags()",
    "API" : "org.xwiki.xml.internal.html.SecureHTMLElementSanitizerTest:void:extraAllowedTags()"
  } ]
}, {
  "project_slug" : "apache__struts_CVE-2020-17530_2.5.25",
  "advisory_id" : "https://github.com/advisories/GHSA-jc35-q369-45pv",
  "cve_id" : "CVE-2020-17530",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java",
    "signature" : "void addParametersToContext(ActionContext,Map)",
    "API" : "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:void:addParametersToContext(ActionContext,Map)"
  }, {
    "file" : "core/src/main/java/org/apache/struts2/dispatcher/HttpParameters.java",
    "signature" : "HttpParameters build()",
    "API" : "org.apache.struts2.dispatcher.HttpParameters:HttpParameters:build()"
  } ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2019-10077_2.11.0.M3",
  "advisory_id" : "https://github.com/advisories/GHSA-cj6j-32rg-45r2",
  "cve_id" : "CVE-2019-10077",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java",
    "signature" : "Element handleHyperlinks(String,int)",
    "API" : "org.apache.wiki.parser.JSPWikiMarkupParser:Element:handleHyperlinks(String,int)"
  }, {
    "file" : "jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java",
    "signature" : "Element handleDiv(boolean)",
    "API" : "org.apache.wiki.parser.JSPWikiMarkupParser:Element:handleDiv(boolean)"
  } ]
}, {
  "project_slug" : "asf__commons-text_CVE-2022-42889_1.9",
  "advisory_id" : "https://github.com/advisories/GHSA-599f-7c49-w659",
  "cve_id" : "CVE-2022-42889",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/apache/commons/text/StringSubstitutor.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/InterpolatorStringLookup.java",
    "signature" : "InterpolatorStringLookup(Map,StringLookup,boolean)",
    "API" : ""
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/InterpolatorStringLookup.java",
    "signature" : "String lookup(String)",
    "API" : "org.apache.commons.text.lookup.InterpolatorStringLookup:String:lookup(String)"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/InterpolatorStringLookup.java",
    "signature" : "String toKey(String)",
    "API" : "org.apache.commons.text.lookup.InterpolatorStringLookup:String:toKey(String)"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/StringLookupFactory.java",
    "signature" : "void addDefaultStringLookups(Map)",
    "API" : "org.apache.commons.text.lookup.StringLookupFactory:void:addDefaultStringLookups(Map)"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/StringLookupFactory.java",
    "signature" : "StringLookup interpolatorStringLookup()",
    "API" : "org.apache.commons.text.lookup.StringLookupFactory:StringLookup:interpolatorStringLookup()"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/StringLookupFactory.java",
    "signature" : "Map toMap(Map)",
    "API" : "org.apache.commons.text.lookup.StringLookupFactory:Map:toMap(Map)"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/StringLookupFactory.java",
    "signature" : "StringLookup xmlStringLookup()",
    "API" : "org.apache.commons.text.lookup.StringLookupFactory:StringLookup:xmlStringLookup()"
  }, {
    "file" : "src/main/java/org/apache/commons/text/lookup/StringLookupFactory.java",
    "signature" : "StringLookup environmentVariableStringLookup()",
    "API" : "org.apache.commons.text.lookup.StringLookupFactory:StringLookup:environmentVariableStringLookup()"
  }, {
    "file" : "src/test/java/org/apache/commons/text/StringSubstitutorWithInterpolatorStringLookupTest.java",
    "signature" : "void testDefaultValueForMissingKeyInResourceBundle()",
    "API" : "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest:void:testDefaultValueForMissingKeyInResourceBundle()"
  }, {
    "file" : "src/test/java/org/apache/commons/text/StringSubstitutorWithInterpolatorStringLookupTest.java",
    "signature" : "void testLocalHostLookup_Name()",
    "API" : "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest:void:testLocalHostLookup_Name()"
  }, {
    "file" : "src/test/java/org/apache/commons/text/StringSubstitutorWithInterpolatorStringLookupTest.java",
    "signature" : "void testDefaultInterpolator()",
    "API" : "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest:void:testDefaultInterpolator()"
  }, {
    "file" : "src/test/java/org/apache/commons/text/StringSubstitutorWithInterpolatorStringLookupTest.java",
    "signature" : "void testDnsLookupCanonicalName()",
    "API" : "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest:void:testDnsLookupCanonicalName()"
  }, {
    "file" : "src/test/java/org/apache/commons/text/lookup/StringLookupFactoryTest.java",
    "signature" : "void testSingletons()",
    "API" : "org.apache.commons.text.lookup.StringLookupFactoryTest:void:testSingletons()"
  } ]
}, {
  "project_slug" : "hibernate__hibernate-validator_CVE-2019-10219_6.0.17.Final",
  "advisory_id" : "https://github.com/advisories/GHSA-m8p2-495h-ccmh",
  "cve_id" : "CVE-2019-10219",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "engine/src/main/java/org/hibernate/validator/internal/constraintvalidators/hv/SafeHtmlValidator.java",
    "signature" : "Document getFragmentAsDocument(CharSequence)",
    "API" : "org.hibernate.validator.internal.constraintvalidators.hv.SafeHtmlValidator:Document:getFragmentAsDocument(CharSequence)"
  }, {
    "file" : "engine/src/test/java/org/hibernate/validator/test/internal/constraintvalidators/hv/SafeHtmlValidatorTest.java",
    "signature" : "void testInvalidScriptTagIncluded()",
    "API" : "org.hibernate.validator.test.internal.constraintvalidators.hv.SafeHtmlValidatorTest:void:testInvalidScriptTagIncluded()"
  }, {
    "file" : "engine/src/test/java/org/hibernate/validator/test/internal/constraintvalidators/hv/SafeHtmlValidatorTest.java",
    "signature" : "void testDivWithWhiteListedClassAttribute()",
    "API" : "org.hibernate.validator.test.internal.constraintvalidators.hv.SafeHtmlValidatorTest:void:testDivWithWhiteListedClassAttribute()"
  }, {
    "file" : "engine/src/main/java/org/hibernate/validator/internal/constraintvalidators/hv/SafeHtmlValidator.java",
    "signature" : "Document getFragmentAsDocument(CharSequence)",
    "API" : "org.hibernate.validator.internal.constraintvalidators.hv.SafeHtmlValidator:Document:getFragmentAsDocument(CharSequence)"
  }, {
    "file" : "engine/src/test/java/org/hibernate/validator/test/internal/constraintvalidators/hv/SafeHtmlValidatorTest.java",
    "signature" : "void testDivWithWhiteListedClassAttribute()",
    "API" : "org.hibernate.validator.test.internal.constraintvalidators.hv.SafeHtmlValidatorTest:void:testDivWithWhiteListedClassAttribute()"
  }, {
    "file" : "engine/src/test/java/org/hibernate/validator/test/internal/constraintvalidators/hv/SafeHtmlValidatorTest.java",
    "signature" : "void testInvalidScriptTagIncluded()",
    "API" : "org.hibernate.validator.test.internal.constraintvalidators.hv.SafeHtmlValidatorTest:void:testInvalidScriptTagIncluded()"
  } ]
}, {
  "project_slug" : "alibaba__one-java-agent_CVE-2022-25842_0.0.1",
  "advisory_id" : "https://github.com/advisories/GHSA-9hr3-j9mc-xmq2",
  "cve_id" : "CVE-2022-25842",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java",
    "signature" : "unzip(String zipFile, String extractFolder)",
    "API" : "com.alibaba.oneagent.utils.IOUtils:unzip(String:zipFile, String extractFolder)"
  } ]
}, {
  "project_slug" : "yamcs__yamcs_CVE-2023-45278_5.8.6",
  "advisory_id" : "https://github.com/advisories/GHSA-43fw-536j-w37j",
  "cve_id" : "CVE-2023-45278",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "byte getObject(String)",
    "API" : "org.yamcs.yarch.FileSystemBucket:byte:getObject(String)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "ObjectProperties toObjectProperties(String,Path,BasicFileAttributes)",
    "API" : "org.yamcs.yarch.FileSystemBucket:ObjectProperties:toObjectProperties(String,Path,BasicFileAttributes)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "void putObject(String,String,Map,byte,Path,BasicFileAttributes)",
    "API" : "org.yamcs.yarch.FileSystemBucket:void:putObject(String,String,Map,byte,Path,BasicFileAttributes)"
  }, {
    "file" : "yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java",
    "signature" : "ObjectProperties findObject(String)",
    "API" : "org.yamcs.yarch.FileSystemBucket:ObjectProperties:findObject(String)"
  } ]
}, {
  "project_slug" : "asf__tapestry-5_CVE-2019-0207_5.4.4",
  "advisory_id" : "https://github.com/advisories/GHSA-89r3-rcpj-h7w6",
  "cve_id" : "CVE-2019-0207",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "tapestry-ioc/src/main/java/org/apache/tapestry5/ioc/internal/util/AbstractResource.java",
    "signature" : "Resource forFile(String)",
    "API" : "org.apache.tapestry5.ioc.internal.util.AbstractResource:Resource:forFile(String)"
  } ]
}, {
  "project_slug" : "joniles__mpxj_CVE-2020-35460_8.3.4",
  "advisory_id" : "https://github.com/advisories/GHSA-p9j6-4pjr-gp48",
  "cve_id" : "CVE-2020-35460",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/net/sf/mpxj/common/InputStreamHelper.java",
    "signature" : "void processZipStream(File,InputStream)",
    "API" : "net.sf.mpxj.common.InputStreamHelper:void:processZipStream(File,InputStream)"
  } ]
}, {
  "project_slug" : "apache__dolphinscheduler_CVE-2023-51770_3.2.0",
  "advisory_id" : "https://github.com/advisories/GHSA-ff2w-wm48-jhqj",
  "cve_id" : "CVE-2023-51770",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/main/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessor.java",
    "signature" : "boolean checkKeyIsLegitimate(String)",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessor:boolean:checkKeyIsLegitimate(String)"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/main/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessor.java",
    "signature" : "Connection getConnection(ConnectionParam)",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessor:Connection:getConnection(ConnectionParam)"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/main/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessor.java",
    "signature" : "String getJdbcUrl(ConnectionParam)",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessor:String:getJdbcUrl(ConnectionParam)"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/main/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessor.java",
    "signature" : "String transformOther(Map)",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessor:String:transformOther(Map)"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/main/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessor.java",
    "signature" : "String getValidationQuery()",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessor:String:getValidationQuery()"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/test/java/org/apache/dolphinscheduler/plugin/datasource/mysql/param/MySQLDataSourceProcessorTest.java",
    "signature" : "void testGetJdbcUrl()",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.param.MySQLDataSourceProcessorTest:void:testGetJdbcUrl()"
  }, {
    "file" : "dolphinscheduler-datasource-plugin/dolphinscheduler-datasource-mysql/src/test/java/org/apache/dolphinscheduler/plugin/datasource/mysql/utils/DataSourceUtilsTest.java",
    "signature" : "void testGetJdbcUrl()",
    "API" : "org.apache.dolphinscheduler.plugin.datasource.mysql.utils.DataSourceUtilsTest:void:testGetJdbcUrl()"
  } ]
}, {
  "project_slug" : "apache__tika_CVE-2018-11762_1.18",
  "advisory_id" : "https://github.com/advisories/GHSA-w6g3-v46q-5p28",
  "cve_id" : "CVE-2018-11762",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "File getOutputFile(String,Metadata,MediaType)",
    "API" : "org.apache.tika.cli.TikaCLI:File:getOutputFile(String,Metadata,MediaType)"
  }, {
    "file" : "tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java",
    "signature" : "void testConfigSerializationCustomStatic()",
    "API" : "org.apache.tika.cli.TikaCLITest:void:testConfigSerializationCustomStatic()"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "void process(String)",
    "API" : "org.apache.tika.cli.TikaCLI:void:process(String)"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "void parseEmbedded(InputStream,ContentHandler,Metadata,boolean)",
    "API" : "org.apache.tika.cli.TikaCLI:void:parseEmbedded(InputStream,ContentHandler,Metadata,boolean)"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "void endDocument()",
    "API" : "org.apache.tika.cli.TikaCLI:void:endDocument()"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "void endDocument()",
    "API" : "org.apache.tika.cli.TikaCLI:void:endDocument()"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "void processSocketInBackground(Socket)",
    "API" : "org.apache.tika.cli.TikaCLI:void:processSocketInBackground(Socket)"
  }, {
    "file" : "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
    "signature" : "NoDocumentXMPMetaHandler(Metadata,PrintWriter)",
    "API" : ""
  }, {
    "file" : "tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java",
    "signature" : "void testExtract()",
    "API" : "org.apache.tika.cli.TikaCLITest:void:testExtract()"
  }, {
    "file" : "tika-example/src/main/java/org/apache/tika/example/ExtractEmbeddedFiles.java",
    "signature" : "void parseEmbedded(InputStream,ContentHandler,Metadata,boolean)",
    "API" : "org.apache.tika.example.ExtractEmbeddedFiles:void:parseEmbedded(InputStream,ContentHandler,Metadata,boolean)"
  }, {
    "file" : "tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java",
    "signature" : "void parseEmbedded(InputStream,ContentHandler,Metadata,boolean)",
    "API" : "org.apache.tika.server.resource.UnpackerResource:void:parseEmbedded(InputStream,ContentHandler,Metadata,boolean)"
  } ]
}, {
  "project_slug" : "asf__karaf_CVE-2022-22932_4.3.5",
  "advisory_id" : "https://github.com/advisories/GHSA-544x-2jx9-4pfg",
  "cve_id" : "CVE-2022-22932",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "obr/src/main/java/org/apache/karaf/obr/command/util/FileUtil.java",
    "signature" : "void unjar(JarInputStream,File)",
    "API" : "org.apache.karaf.obr.command.util.FileUtil:void:unjar(JarInputStream,File)"
  } ]
}, {
  "project_slug" : "apache__rocketmq_CVE-2023-33246_5.1.0",
  "advisory_id" : "https://github.com/advisories/GHSA-x3cq-8f32-5f63",
  "cve_id" : "CVE-2023-33246",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
    "signature" : "RemotingCommand updateBrokerConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.broker.processor.AdminBrokerProcessor:RemotingCommand:updateBrokerConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "broker/src/test/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessorTest.java",
    "signature" : "void testGetMinOffset()",
    "API" : "org.apache.rocketmq.broker.processor.AdminBrokerProcessorTest:void:testGetMinOffset()"
  }, {
    "file" : "controller/src/main/java/org/apache/rocketmq/controller/processor/ControllerRequestProcessor.java",
    "signature" : "RemotingCommand handleGetControllerConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.controller.processor.ControllerRequestProcessor:RemotingCommand:handleGetControllerConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "controller/src/main/java/org/apache/rocketmq/controller/processor/ControllerRequestProcessor.java",
    "signature" : "RemotingCommand handleUpdateControllerConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.controller.processor.ControllerRequestProcessor:RemotingCommand:handleUpdateControllerConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java",
    "signature" : "RemotingCommand getConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessor:RemotingCommand:getConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java",
    "signature" : "RemotingCommand updateConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessor:RemotingCommand:updateConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/test/java/org/apache/rocketmq/namesrv/processor/RequestProcessorTest.java",
    "signature" : "void init()",
    "API" : "org.apache.rocketmq.namesrv.processor.RequestProcessorTest:void:init()"
  }, {
    "file" : "namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java",
    "signature" : "RemotingCommand getConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessor:RemotingCommand:getConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java",
    "signature" : "RemotingCommand updateConfig(ChannelHandlerContext,RemotingCommand)",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessor:RemotingCommand:updateConfig(ChannelHandlerContext,RemotingCommand)"
  }, {
    "file" : "namesrv/src/test/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessorTest.java",
    "signature" : "void testProcessRequest_RegisterBrokerWithFilterServer()",
    "API" : "org.apache.rocketmq.namesrv.processor.DefaultRequestProcessorTest:void:testProcessRequest_RegisterBrokerWithFilterServer()"
  } ]
}, {
  "project_slug" : "apache__shiro_CVE-2023-46749_1.12.0",
  "advisory_id" : "https://github.com/advisories/GHSA-jc7h-c423-mpjc",
  "cve_id" : "CVE-2023-46749",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean isNormalized(String)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:isNormalized(String)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean isAccessAllowed(ServletRequest,ServletResponse,Object)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:isAccessAllowed(ServletRequest,ServletResponse,Object)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean isValid(String)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:isValid(String)"
  }, {
    "file" : "web/src/main/java/org/apache/shiro/web/filter/InvalidRequestFilter.java",
    "signature" : "boolean containsSemicolon(String)",
    "API" : "org.apache.shiro.web.filter.InvalidRequestFilter:boolean:containsSemicolon(String)"
  } ]
}, {
  "project_slug" : "nahsra__antisamy_CVE-2016-10006_1.5.3",
  "advisory_id" : "https://github.com/advisories/GHSA-683w-6h9j-57wq",
  "cve_id" : "CVE-2016-10006",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/validator/html/scan/MagicSAXFilter.java",
    "signature" : "void startElement(QName,XMLAttributes,Augmentations)",
    "API" : "org.owasp.validator.html.scan.MagicSAXFilter:void:startElement(QName,XMLAttributes,Augmentations)"
  } ]
}, {
  "project_slug" : "jstachio__jstachio_CVE-2023-33962_1.0.0",
  "advisory_id" : "https://github.com/advisories/GHSA-gwxv-jv83-6qjr",
  "cve_id" : "CVE-2023-33962",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "apache__jspwiki_CVE-2019-0225_2.11.0.M2",
  "advisory_id" : "https://github.com/advisories/GHSA-pffw-p2q5-w6vh",
  "cve_id" : "CVE-2019-0225",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ ]
}, {
  "project_slug" : "ESAPI__esapi-java-legacy_CVE-2022-23457_2.2.3.1",
  "advisory_id" : "https://github.com/advisories/GHSA-8m5h-hrqm-pxm2",
  "cve_id" : "CVE-2022-23457",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/org/owasp/esapi/reference/DefaultValidator.java",
    "signature" : "String getValidDirectoryPath(String,String,File,boolean)",
    "API" : "org.owasp.esapi.reference.DefaultValidator:String:getValidDirectoryPath(String,String,File,boolean)"
  } ]
}, {
  "project_slug" : "codecentric__spring-boot-admin_CVE-2022-46166_2.6.9",
  "advisory_id" : "https://github.com/advisories/GHSA-w3x5-427h-wfq6",
  "cve_id" : "CVE-2022-46166",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/DingTalkNotifier.java",
    "signature" : "Object getText(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.DingTalkNotifier:Object:getText(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/DingTalkNotifier.java",
    "signature" : "String getSign(Long)",
    "API" : "de.codecentric.boot.admin.server.notify.DingTalkNotifier:String:getSign(Long)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/DiscordNotifier.java",
    "signature" : "String createContent(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.DiscordNotifier:String:createContent(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "String buildUrl()",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:String:buildUrl()"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "HttpEntity createHipChatNotification(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:HttpEntity:createHipChatNotification(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "String getMessage(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:String:getMessage(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "String getColor(InstanceEvent)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:String:getColor(InstanceEvent)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "void setUrl(URI url)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:void:setUrl(URI url)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "void setAuthToken(String authToken)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:void:setAuthToken(String authToken)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "void setRoomId(String roomId)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:void:setRoomId(String roomId)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "void setNotify(boolean notify)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:void:setNotify(boolean notify)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/HipchatNotifier.java",
    "signature" : "void setDescription(String description)",
    "API" : "de.codecentric.boot.admin.server.notify.HipchatNotifier:void:setDescription(String description)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/LetsChatNotifier.java",
    "signature" : "String getText(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.LetsChatNotifier:String:getText(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/MicrosoftTeamsNotifier.java",
    "signature" : "Mono doNotify(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier:Mono:doNotify(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/MicrosoftTeamsNotifier.java",
    "signature" : "Message createMessage(Instance,String,String,StandardEvaluationContext)",
    "API" : "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier:Message:createMessage(Instance,String,String,StandardEvaluationContext)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/MicrosoftTeamsNotifier.java",
    "signature" : "URI getWebhookUrl()",
    "API" : "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier:URI:getWebhookUrl()"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/OpsGenieNotifier.java",
    "signature" : "String getDescription(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.OpsGenieNotifier:String:getDescription(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/OpsGenieNotifier.java",
    "signature" : "String buildUrl(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.OpsGenieNotifier:String:buildUrl(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/OpsGenieNotifier.java",
    "signature" : "String getMessage()",
    "API" : "de.codecentric.boot.admin.server.notify.OpsGenieNotifier:String:getMessage()"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/OpsGenieNotifier.java",
    "signature" : "String getMessage(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.OpsGenieNotifier:String:getMessage(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/OpsGenieNotifier.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "String getDescription(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.PagerdutyNotifier:String:getDescription(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "void setUrl(URI url)",
    "API" : "de.codecentric.boot.admin.server.notify.PagerdutyNotifier:void:setUrl(URI url)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/PagerdutyNotifier.java",
    "signature" : "",
    "API" : ""
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/SlackNotifier.java",
    "signature" : "String getText(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.SlackNotifier:String:getText(InstanceEvent,Instance)"
  }, {
    "file" : "spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/notify/TelegramNotifier.java",
    "signature" : "String getText(InstanceEvent,Instance)",
    "API" : "de.codecentric.boot.admin.server.notify.TelegramNotifier:String:getText(InstanceEvent,Instance)"
  } ]
}, {
  "project_slug" : "aws__aws-sdk-java_CVE-2022-31159_1.12.260",
  "advisory_id" : "https://github.com/advisories/GHSA-c28r-hw5m-5gv3",
  "cve_id" : "CVE-2022-31159",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AWSCodeArtifactAsyncClient.java",
    "signature" : "java describeRepositoryAsync(DescribeRepositoryRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AWSCodeArtifactAsyncClient:java:describeRepositoryAsync(DescribeRepositoryRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AWSCodeArtifactAsyncClient.java",
    "signature" : "java untagResourceAsync(UntagResourceRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AWSCodeArtifactAsyncClient:java:untagResourceAsync(UntagResourceRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AWSCodeArtifactAsyncClient.java",
    "signature" : "java describePackageVersionAsync(DescribePackageVersionRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AWSCodeArtifactAsyncClient:java:describePackageVersionAsync(DescribePackageVersionRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AWSCodeArtifactAsyncClient.java",
    "signature" : "java tagResourceAsync(TagResourceRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AWSCodeArtifactAsyncClient:java:tagResourceAsync(TagResourceRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifact.java",
    "signature" : "DescribeDomainResult describeDomain(DescribeDomainRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifact:DescribeDomainResult:describeDomain(DescribeDomainRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifact.java",
    "signature" : "UntagResourceResult untagResource(UntagResourceRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifact:UntagResourceResult:untagResource(UntagResourceRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifact.java",
    "signature" : "PutRepositoryPermissionsPolicyResult putRepositoryPermissionsPolicy(PutRepositoryPermissionsPolicyRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifact:PutRepositoryPermissionsPolicyResult:putRepositoryPermissionsPolicy(PutRepositoryPermissionsPolicyRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifact.java",
    "signature" : "DescribeRepositoryResult describeRepository(DescribeRepositoryRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifact:DescribeRepositoryResult:describeRepository(DescribeRepositoryRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifactAsync.java",
    "signature" : "java describeRepositoryAsync(DescribeRepositoryRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifactAsync:java:describeRepositoryAsync(DescribeRepositoryRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifactAsync.java",
    "signature" : "java describeDomainAsync(DescribeDomainRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifactAsync:java:describeDomainAsync(DescribeDomainRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifactAsync.java",
    "signature" : "java putRepositoryPermissionsPolicyAsync(PutRepositoryPermissionsPolicyRequest,com)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifactAsync:java:putRepositoryPermissionsPolicyAsync(PutRepositoryPermissionsPolicyRequest,com)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/AbstractAWSCodeArtifactAsync.java",
    "signature" : "java untagResourceAsync(UntagResourceRequest)",
    "API" : "com.amazonaws.services.codeartifact.AbstractAWSCodeArtifactAsync:java:untagResourceAsync(UntagResourceRequest)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withFormat(PackageFormat)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withFormat(PackageFormat)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "void setFormat(String)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:void:setFormat(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withVersions(java)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withVersions(java)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withPackage(String)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withPackage(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withSourceRepository(String)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withSourceRepository(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "void setVersions(java)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:void:setVersions(java)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withFormat(String)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withFormat(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "String getFormat()",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:String:getFormat()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/CopyPackageVersionsRequest.java",
    "signature" : "CopyPackageVersionsRequest withVersions(String)",
    "API" : "com.amazonaws.services.codeartifact.model.CopyPackageVersionsRequest:CopyPackageVersionsRequest:withVersions(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/DescribePackageVersionRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.DescribePackageVersionRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/DisposePackageVersionsRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.DisposePackageVersionsRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/GetPackageVersionAssetRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.GetPackageVersionAssetRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/GetPackageVersionReadmeRequest.java",
    "signature" : "GetPackageVersionReadmeRequest withRepository(String)",
    "API" : "com.amazonaws.services.codeartifact.model.GetPackageVersionReadmeRequest:GetPackageVersionReadmeRequest:withRepository(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/GetPackageVersionReadmeResult.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.GetPackageVersionReadmeResult:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "void setFormat(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:void:setFormat(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "ListPackageVersionAssetsRequest withRepository(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:ListPackageVersionAssetsRequest:withRepository(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "void setRepository(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:void:setRepository(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "String getRepository()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:String:getRepository()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsRequest.java",
    "signature" : "String getFormat()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsRequest:String:getFormat()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsResult.java",
    "signature" : "String getFormat()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsResult:String:getFormat()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsResult.java",
    "signature" : "void setFormat(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsResult:void:setFormat(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionAssetsResult.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionAssetsResult:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionDependenciesRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionDependenciesRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionDependenciesResult.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionDependenciesResult:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:String:toString()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest withSortBy(PackageVersionSortType)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:withSortBy(PackageVersionSortType)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "String getSortBy()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:String:getSortBy()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest withPackage(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:withPackage(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "String getStatus()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:String:getStatus()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest withStatus(PackageVersionStatus)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:withStatus(PackageVersionStatus)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest clone()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:clone()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest withSortBy(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:withSortBy(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "ListPackageVersionsRequest withStatus(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:ListPackageVersionsRequest:withStatus(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackageVersionsResult.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackageVersionsResult:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackagesRequest.java",
    "signature" : "ListPackagesRequest withFormat(PackageFormat)",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackagesRequest:ListPackagesRequest:withFormat(PackageFormat)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/ListPackagesRequest.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.codeartifact.model.ListPackagesRequest:String:toString()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageDependency.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.PackageDependency:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageSummary.java",
    "signature" : "void setPackage(String)",
    "API" : "com.amazonaws.services.codeartifact.model.PackageSummary:void:setPackage(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageSummary.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.codeartifact.model.PackageSummary:String:toString()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionDescription.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionDescription:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionDescription.java",
    "signature" : "void setFormat(String)",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionDescription:void:setFormat(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionDescription.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionDescription:String:toString()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionDescription.java",
    "signature" : "int hashCode()",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionDescription:int:hashCode()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionSummary.java",
    "signature" : "PackageVersionSummary clone()",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionSummary:PackageVersionSummary:clone()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/PackageVersionSummary.java",
    "signature" : "void setVersion(String)",
    "API" : "com.amazonaws.services.codeartifact.model.PackageVersionSummary:void:setVersion(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/UpdatePackageVersionsStatusRequest.java",
    "signature" : "void setNamespace(String)",
    "API" : "com.amazonaws.services.codeartifact.model.UpdatePackageVersionsStatusRequest:void:setNamespace(String)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/ListPackageVersionsRequestMarshaller.java",
    "signature" : "ListPackageVersionsRequestMarshaller getInstance()",
    "API" : "com.amazonaws.services.codeartifact.model.transform.ListPackageVersionsRequestMarshaller:ListPackageVersionsRequestMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/ListPackageVersionsRequestMarshaller.java",
    "signature" : "void marshall(ListPackageVersionsRequest,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.ListPackageVersionsRequestMarshaller:void:marshall(ListPackageVersionsRequest,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/ListPackagesRequestMarshaller.java",
    "signature" : "void marshall(ListPackagesRequest,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.ListPackagesRequestMarshaller:void:marshall(ListPackagesRequest,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageSummaryJsonUnmarshaller.java",
    "signature" : "PackageSummary unmarshall(JsonUnmarshallerContext)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageSummaryJsonUnmarshaller:PackageSummary:unmarshall(JsonUnmarshallerContext)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageSummaryMarshaller.java",
    "signature" : "void marshall(PackageSummary,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageSummaryMarshaller:void:marshall(PackageSummary,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageSummaryMarshaller.java",
    "signature" : "PackageSummaryMarshaller getInstance()",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageSummaryMarshaller:PackageSummaryMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionDescriptionJsonUnmarshaller.java",
    "signature" : "PackageVersionDescription unmarshall(JsonUnmarshallerContext)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionDescriptionJsonUnmarshaller:PackageVersionDescription:unmarshall(JsonUnmarshallerContext)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionDescriptionMarshaller.java",
    "signature" : "PackageVersionDescriptionMarshaller getInstance()",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionDescriptionMarshaller:PackageVersionDescriptionMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionDescriptionMarshaller.java",
    "signature" : "void marshall(PackageVersionDescription,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionDescriptionMarshaller:void:marshall(PackageVersionDescription,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionSummaryJsonUnmarshaller.java",
    "signature" : "PackageVersionSummary unmarshall(JsonUnmarshallerContext)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionSummaryJsonUnmarshaller:PackageVersionSummary:unmarshall(JsonUnmarshallerContext)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionSummaryMarshaller.java",
    "signature" : "void marshall(PackageVersionSummary,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionSummaryMarshaller:void:marshall(PackageVersionSummary,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-codeartifact/src/main/java/com/amazonaws/services/codeartifact/model/transform/PackageVersionSummaryMarshaller.java",
    "signature" : "PackageVersionSummaryMarshaller getInstance()",
    "API" : "com.amazonaws.services.codeartifact.model.transform.PackageVersionSummaryMarshaller:PackageVersionSummaryMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/NetworkFirewallPolicyDescription.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.fms.model.NetworkFirewallPolicyDescription:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/StatefulRuleGroup.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.fms.model.StatefulRuleGroup:String:toString()"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/transform/NetworkFirewallPolicyDescriptionJsonUnmarshaller.java",
    "signature" : "NetworkFirewallPolicyDescription unmarshall(JsonUnmarshallerContext)",
    "API" : "com.amazonaws.services.fms.model.transform.NetworkFirewallPolicyDescriptionJsonUnmarshaller:NetworkFirewallPolicyDescription:unmarshall(JsonUnmarshallerContext)"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/transform/NetworkFirewallPolicyDescriptionMarshaller.java",
    "signature" : "void marshall(NetworkFirewallPolicyDescription,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.fms.model.transform.NetworkFirewallPolicyDescriptionMarshaller:void:marshall(NetworkFirewallPolicyDescription,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/transform/StatefulRuleGroupJsonUnmarshaller.java",
    "signature" : "StatefulRuleGroup unmarshall(JsonUnmarshallerContext)",
    "API" : "com.amazonaws.services.fms.model.transform.StatefulRuleGroupJsonUnmarshaller:StatefulRuleGroup:unmarshall(JsonUnmarshallerContext)"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/transform/StatefulRuleGroupMarshaller.java",
    "signature" : "void marshall(StatefulRuleGroup,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.fms.model.transform.StatefulRuleGroupMarshaller:void:marshall(StatefulRuleGroup,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-fms/src/main/java/com/amazonaws/services/fms/model/transform/StatefulRuleGroupMarshaller.java",
    "signature" : "StatefulRuleGroupMarshaller getInstance()",
    "API" : "com.amazonaws.services.fms.model.transform.StatefulRuleGroupMarshaller:StatefulRuleGroupMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateJobRequest.java",
    "signature" : "CreateJobRequest withNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.CreateJobRequest:CreateJobRequest:withNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateJobRequest.java",
    "signature" : "void setTimeout(Integer)",
    "API" : "com.amazonaws.services.glue.model.CreateJobRequest:void:setTimeout(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateJobRequest.java",
    "signature" : "java getDefaultArguments()",
    "API" : "com.amazonaws.services.glue.model.CreateJobRequest:java:getDefaultArguments()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateJobRequest.java",
    "signature" : "CreateJobRequest addDefaultArgumentsEntry(String,String)",
    "API" : "com.amazonaws.services.glue.model.CreateJobRequest:CreateJobRequest:addDefaultArgumentsEntry(String,String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "void setNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:void:setNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "String getRequestOrigin()",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:String:getRequestOrigin()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "int hashCode()",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:int:hashCode()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "Integer getNumberOfWorkers()",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:Integer:getNumberOfWorkers()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "CreateSessionRequest withNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:CreateSessionRequest:withNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "CreateSessionRequest withMaxCapacity(Double)",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:CreateSessionRequest:withMaxCapacity(Double)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/CreateSessionRequest.java",
    "signature" : "CreateSessionRequest withSecurityConfiguration(String)",
    "API" : "com.amazonaws.services.glue.model.CreateSessionRequest:CreateSessionRequest:withSecurityConfiguration(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Job.java",
    "signature" : "Integer getNumberOfWorkers()",
    "API" : "com.amazonaws.services.glue.model.Job:Integer:getNumberOfWorkers()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Job.java",
    "signature" : "Job withSecurityConfiguration(String)",
    "API" : "com.amazonaws.services.glue.model.Job:Job:withSecurityConfiguration(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Job.java",
    "signature" : "void setNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.Job:void:setNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Job.java",
    "signature" : "Job withAllocatedCapacity(Integer)",
    "API" : "com.amazonaws.services.glue.model.Job:Job:withAllocatedCapacity(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobRun.java",
    "signature" : "JobRun withSecurityConfiguration(String)",
    "API" : "com.amazonaws.services.glue.model.JobRun:JobRun:withSecurityConfiguration(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobRun.java",
    "signature" : "void setNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.JobRun:void:setNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobRun.java",
    "signature" : "JobRun withMaxCapacity(Double)",
    "API" : "com.amazonaws.services.glue.model.JobRun:JobRun:withMaxCapacity(Double)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobRun.java",
    "signature" : "Integer getNumberOfWorkers()",
    "API" : "com.amazonaws.services.glue.model.JobRun:Integer:getNumberOfWorkers()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobUpdate.java",
    "signature" : "void setNumberOfWorkers(Integer)",
    "API" : "com.amazonaws.services.glue.model.JobUpdate:void:setNumberOfWorkers(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobUpdate.java",
    "signature" : "Integer getNumberOfWorkers()",
    "API" : "com.amazonaws.services.glue.model.JobUpdate:Integer:getNumberOfWorkers()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobUpdate.java",
    "signature" : "JobUpdate withSecurityConfiguration(String)",
    "API" : "com.amazonaws.services.glue.model.JobUpdate:JobUpdate:withSecurityConfiguration(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/JobUpdate.java",
    "signature" : "JobUpdate withAllocatedCapacity(Integer)",
    "API" : "com.amazonaws.services.glue.model.JobUpdate:JobUpdate:withAllocatedCapacity(Integer)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/ListSessionsResult.java",
    "signature" : "void setIds(java)",
    "API" : "com.amazonaws.services.glue.model.ListSessionsResult:void:setIds(java)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/ListSessionsResult.java",
    "signature" : "java getIds()",
    "API" : "com.amazonaws.services.glue.model.ListSessionsResult:java:getIds()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/ListStatementsRequest.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.glue.model.ListStatementsRequest:String:toString()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/ListStatementsResult.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.glue.model.ListStatementsResult:String:toString()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Session.java",
    "signature" : "void setGlueVersion(String)",
    "API" : "com.amazonaws.services.glue.model.Session:void:setGlueVersion(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/Session.java",
    "signature" : "String getGlueVersion()",
    "API" : "com.amazonaws.services.glue.model.Session:String:getGlueVersion()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/SessionCommand.java",
    "signature" : "String getName()",
    "API" : "com.amazonaws.services.glue.model.SessionCommand:String:getName()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/SessionCommand.java",
    "signature" : "void setName(String)",
    "API" : "com.amazonaws.services.glue.model.SessionCommand:void:setName(String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "String getSecurityConfiguration()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:String:getSecurityConfiguration()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "String toString()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:String:toString()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "void setMaxCapacity(Double)",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:void:setMaxCapacity(Double)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "String getWorkerType()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:String:getWorkerType()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "Integer getAllocatedCapacity()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:Integer:getAllocatedCapacity()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "StartJobRunRequest addArgumentsEntry(String,String)",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:StartJobRunRequest:addArgumentsEntry(String,String)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "StartJobRunRequest withMaxCapacity(Double)",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:StartJobRunRequest:withMaxCapacity(Double)"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "java getArguments()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:java:getArguments()"
  }, {
    "file" : "aws-java-sdk-glue/src/main/java/com/amazonaws/services/glue/model/StartJobRunRequest.java",
    "signature" : "Integer getNumberOfWorkers()",
    "API" : "com.amazonaws.services.glue.model.StartJobRunRequest:Integer:getNumberOfWorkers()"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AWSInspector2AsyncClient.java",
    "signature" : "java getFindingsReportStatusAsync(GetFindingsReportStatusRequest)",
    "API" : "com.amazonaws.services.inspector2.AWSInspector2AsyncClient:java:getFindingsReportStatusAsync(GetFindingsReportStatusRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AWSInspector2Client.java",
    "signature" : "GetDelegatedAdminAccountResult executeGetDelegatedAdminAccount(GetDelegatedAdminAccountRequest)",
    "API" : "com.amazonaws.services.inspector2.AWSInspector2Client:GetDelegatedAdminAccountResult:executeGetDelegatedAdminAccount(GetDelegatedAdminAccountRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AWSInspector2Client.java",
    "signature" : "UpdateFilterResult executeUpdateFilter(UpdateFilterRequest)",
    "API" : "com.amazonaws.services.inspector2.AWSInspector2Client:UpdateFilterResult:executeUpdateFilter(UpdateFilterRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2.java",
    "signature" : "void shutdown()",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2:void:shutdown()"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2.java",
    "signature" : "EnableDelegatedAdminAccountResult enableDelegatedAdminAccount(EnableDelegatedAdminAccountRequest)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2:EnableDelegatedAdminAccountResult:enableDelegatedAdminAccount(EnableDelegatedAdminAccountRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2.java",
    "signature" : "GetFindingsReportStatusResult getFindingsReportStatus(GetFindingsReportStatusRequest)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2:GetFindingsReportStatusResult:getFindingsReportStatus(GetFindingsReportStatusRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2.java",
    "signature" : "UpdateFilterResult updateFilter(UpdateFilterRequest)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2:UpdateFilterResult:updateFilter(UpdateFilterRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2Async.java",
    "signature" : "java enableDelegatedAdminAccountAsync(EnableDelegatedAdminAccountRequest,com)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2Async:java:enableDelegatedAdminAccountAsync(EnableDelegatedAdminAccountRequest,com)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2Async.java",
    "signature" : "java getFindingsReportStatusAsync(GetFindingsReportStatusRequest)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2Async:java:getFindingsReportStatusAsync(GetFindingsReportStatusRequest)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/AbstractAWSInspector2Async.java",
    "signature" : "java updateFilterAsync(UpdateFilterRequest,com)",
    "API" : "com.amazonaws.services.inspector2.AbstractAWSInspector2Async:java:updateFilterAsync(UpdateFilterRequest,com)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/CoverageFilterCriteria.java",
    "signature" : "void setResourceType(java)",
    "API" : "com.amazonaws.services.inspector2.model.CoverageFilterCriteria:void:setResourceType(java)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/CoverageFilterCriteria.java",
    "signature" : "CoverageFilterCriteria withResourceType(CoverageStringFilter)",
    "API" : "com.amazonaws.services.inspector2.model.CoverageFilterCriteria:CoverageFilterCriteria:withResourceType(CoverageStringFilter)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/CreateFilterRequest.java",
    "signature" : "int hashCode()",
    "API" : "com.amazonaws.services.inspector2.model.CreateFilterRequest:int:hashCode()"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/CreateFilterRequest.java",
    "signature" : "CreateFilterRequest addTagsEntry(String,String)",
    "API" : "com.amazonaws.services.inspector2.model.CreateFilterRequest:CreateFilterRequest:addTagsEntry(String,String)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/UpdateFilterRequest.java",
    "signature" : "boolean equals(Object)",
    "API" : "com.amazonaws.services.inspector2.model.UpdateFilterRequest:boolean:equals(Object)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/UpdateFilterRequest.java",
    "signature" : "int hashCode()",
    "API" : "com.amazonaws.services.inspector2.model.UpdateFilterRequest:int:hashCode()"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/transform/CreateFilterRequestMarshaller.java",
    "signature" : "void marshall(CreateFilterRequest,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.inspector2.model.transform.CreateFilterRequestMarshaller:void:marshall(CreateFilterRequest,ProtocolMarshaller)"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/transform/UpdateFilterRequestMarshaller.java",
    "signature" : "UpdateFilterRequestMarshaller getInstance()",
    "API" : "com.amazonaws.services.inspector2.model.transform.UpdateFilterRequestMarshaller:UpdateFilterRequestMarshaller:getInstance()"
  }, {
    "file" : "aws-java-sdk-inspector2/src/main/java/com/amazonaws/services/inspector2/model/transform/UpdateFilterRequestMarshaller.java",
    "signature" : "void marshall(UpdateFilterRequest,ProtocolMarshaller)",
    "API" : "com.amazonaws.services.inspector2.model.transform.UpdateFilterRequestMarshaller:void:marshall(UpdateFilterRequest,ProtocolMarshaller)"
  } ]
}, {
  "project_slug" : "SpringSource__spring-security-oauth_CVE-2018-1260_2.3.2.RELEASE",
  "advisory_id" : "https://github.com/advisories/GHSA-rrpm-pj7p-7j9q",
  "cve_id" : "CVE-2018-1260",
  "cwe_id" : "CWE-094",
  "vulnerableAPI" : [ {
    "file" : "spring-security-oauth2/src/main/java/org/springframework/security/oauth2/client/DefaultOAuth2RequestAuthenticator.java",
    "signature" : "void authenticate(OAuth2ProtectedResourceDetails,OAuth2ClientContext,ClientHttpRequest)",
    "API" : "org.springframework.security.oauth2.client.DefaultOAuth2RequestAuthenticator:void:authenticate(OAuth2ProtectedResourceDetails,OAuth2ClientContext,ClientHttpRequest)"
  }, {
    "file" : "spring-security-oauth2/src/test/java/org/springframework/security/oauth2/client/DefaultOAuth2RequestAuthenticatorTests.java",
    "signature" : "void addsAccessToken()",
    "API" : "org.springframework.security.oauth2.client.DefaultOAuth2RequestAuthenticatorTests:void:addsAccessToken()"
  } ]
}, {
  "project_slug" : "undertow-io__undertow_CVE-2014-7816_1.0.16.Final",
  "advisory_id" : "https://github.com/advisories/GHSA-h6p6-fc4w-cqhx",
  "cve_id" : "CVE-2014-7816",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "core/src/main/java/io/undertow/server/handlers/resource/ResourceHandler.java",
    "signature" : "void serveResource(HttpServerExchange,boolean)",
    "API" : "io.undertow.server.handlers.resource.ResourceHandler:void:serveResource(HttpServerExchange,boolean)"
  }, {
    "file" : "servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java",
    "signature" : "void doGet(HttpServletRequest,HttpServletResponse)",
    "API" : "io.undertow.servlet.handlers.DefaultServlet:void:doGet(HttpServletRequest,HttpServletResponse)"
  }, {
    "file" : "servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java",
    "signature" : "ServletPathMatch findWelcomeFile(String,boolean)",
    "API" : "io.undertow.servlet.handlers.ServletPathMatches:ServletPathMatch:findWelcomeFile(String,boolean)"
  } ]
}, {
  "project_slug" : "apache__nifi_CVE-2022-33140_1.16.2",
  "advisory_id" : "https://github.com/advisories/GHSA-77hf-23pq-2g7c",
  "cve_id" : "CVE-2022-33140",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/NssShellCommands.java",
    "signature" : "String getGroupMembers(String)",
    "API" : "org.apache.nifi.authorization.NssShellCommands:String:getGroupMembers(String)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/OsxShellCommands.java",
    "signature" : "String getGroupMembers(String)",
    "API" : "org.apache.nifi.authorization.OsxShellCommands:String:getGroupMembers(String)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/RemoteShellCommands.java",
    "signature" : "String getGroupMembers(String)",
    "API" : "org.apache.nifi.authorization.RemoteShellCommands:String:getGroupMembers(String)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "void onConfigured(AuthorizerConfigurationContext)",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:void:onConfigured(AuthorizerConfigurationContext)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "Group getGroup(String)",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:Group:getGroup(String)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "void preDestruction()",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:void:preDestruction()"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "void refreshUsersAndGroups()",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:void:refreshUsersAndGroups()"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "ShellCommandsProvider getCommandsProvider()",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:ShellCommandsProvider:getCommandsProvider()"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/main/java/org/apache/nifi/authorization/ShellUserGroupProvider.java",
    "signature" : "User getUserByIdentity(String)",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProvider:User:getUserByIdentity(String)"
  }, {
    "file" : "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-shell-authorizer/src/test/java/org/apache/nifi/authorization/ShellUserGroupProviderIT.java",
    "signature" : "void setupOnce()",
    "API" : "org.apache.nifi.authorization.ShellUserGroupProviderIT:void:setupOnce()"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/NssShellCommands.java",
    "signature" : "String getGroupMembers(String)",
    "API" : "org.apache.nifi.registry.security.authorization.shell.NssShellCommands:String:getGroupMembers(String)"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/OsxShellCommands.java",
    "signature" : "String getGroupMembers(String)",
    "API" : "org.apache.nifi.registry.security.authorization.shell.OsxShellCommands:String:getGroupMembers(String)"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "ShellCommandsProvider getCommandsProvider()",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:ShellCommandsProvider:getCommandsProvider()"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "User getUserByIdentity(String)",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:User:getUserByIdentity(String)"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "Group getGroup(String)",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:Group:getGroup(String)"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "void onConfigured(AuthorizerConfigurationContext)",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:void:onConfigured(AuthorizerConfigurationContext)"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "void refreshUsersAndGroups()",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:void:refreshUsersAndGroups()"
  }, {
    "file" : "nifi-registry/nifi-registry-core/nifi-registry-framework/src/main/java/org/apache/nifi/registry/security/authorization/shell/ShellUserGroupProvider.java",
    "signature" : "void preDestruction()",
    "API" : "org.apache.nifi.registry.security.authorization.shell.ShellUserGroupProvider:void:preDestruction()"
  } ]
}, {
  "project_slug" : "OWASP__json-sanitizer_CVE-2020-13973_1.2.0",
  "advisory_id" : "https://github.com/advisories/GHSA-g8jj-899q-8x3j",
  "cve_id" : "CVE-2020-13973",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/com/google/json/JsonSanitizer.java",
    "signature" : "void sanitizeString(int,int)",
    "API" : "com.google.json.JsonSanitizer:void:sanitizeString(int,int)"
  }, {
    "file" : "src/test/java/com/google/json/JsonSanitizerTest.java",
    "signature" : "void testIssue13()",
    "API" : "com.google.json.JsonSanitizerTest:void:testIssue13()"
  }, {
    "file" : "src/test/java/com/google/json/JsonSanitizerTest.java",
    "signature" : "void testSanitize()",
    "API" : "com.google.json.JsonSanitizerTest:void:testSanitize()"
  } ]
}, {
  "project_slug" : "x-stream__xstream_CVE-2021-21345_1.4.15",
  "advisory_id" : "https://github.com/advisories/GHSA-hwpc-8xqv-jvj4",
  "cve_id" : "CVE-2021-21345",
  "cwe_id" : "CWE-078",
  "vulnerableAPI" : [ {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "void setupSecurity()",
    "API" : "com.thoughtworks.xstream.XStream:void:setupSecurity()"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "void alias(String,Class)",
    "API" : "com.thoughtworks.xstream.XStream:void:alias(String,Class)"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "void setupMappers()",
    "API" : "com.thoughtworks.xstream.XStream:void:setupMappers()"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "void setupDefaultSecurity(XStream)",
    "API" : "com.thoughtworks.xstream.XStream:void:setupDefaultSecurity(XStream)"
  }, {
    "file" : "xstream/src/java/com/thoughtworks/xstream/XStream.java",
    "signature" : "Object unmarshal(HierarchicalStreamReader reader, Object root, DataHolder dataHolder)",
    "API" : "com.thoughtworks.xstream.XStream:Object:unmarshal(HierarchicalStreamReader reader, Object root, DataHolder dataHolder)"
  } ]
}, {
  "project_slug" : "spring-cloud__spring-cloud-config_CVE-2020-5410_2.1.8.RELEASE",
  "advisory_id" : "https://github.com/advisories/GHSA-32xf-jwmv-9hf3",
  "cve_id" : "CVE-2020-5410",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "spring-cloud-config-server/src/main/java/org/springframework/cloud/config/server/resource/GenericResourceRepository.java",
    "signature" : "Resource findOne(String,String,String,String)",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepository:Resource:findOne(String,String,String,String)"
  }, {
    "file" : "spring-cloud-config-server/src/test/java/org/springframework/cloud/config/server/resource/GenericResourceRepositoryTests.java",
    "signature" : "void invalidPathWithPreviousDirectoryAllEncoded()",
    "API" : "org.springframework.cloud.config.server.resource.GenericResourceRepositoryTests:void:invalidPathWithPreviousDirectoryAllEncoded()"
  } ]
}, {
  "project_slug" : "keycloak__keycloak_CVE-2022-4137_20.0.4",
  "advisory_id" : "https://github.com/advisories/GHSA-9hhc-pj4w-w5rv",
  "cve_id" : "CVE-2022-4137",
  "cwe_id" : "CWE-079",
  "vulnerableAPI" : [ {
    "file" : "services/src/main/java/org/keycloak/forms/login/freemarker/FreeMarkerLoginFormsProvider.java",
    "signature" : "Response createResponse(LoginFormsPages)",
    "API" : "org.keycloak.forms.login.freemarker.FreeMarkerLoginFormsProvider:Response:createResponse(LoginFormsPages)"
  }, {
    "file" : "services/src/main/java/org/keycloak/theme/KeycloakSanitizerMethod.java",
    "signature" : "Object exec(List)",
    "API" : "org.keycloak.theme.KeycloakSanitizerMethod:Object:exec(List)"
  }, {
    "file" : "services/src/test/java/org/keycloak/theme/KeycloakSanitizerTest.java",
    "signature" : "void testUrls()",
    "API" : "org.keycloak.theme.KeycloakSanitizerTest:void:testUrls()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/AuthorizationCodeTest.java",
    "signature" : "void authorizationRequestInstalledApp()",
    "API" : "org.keycloak.testsuite.oauth.AuthorizationCodeTest:void:authorizationRequestInstalledApp()"
  }, {
    "file" : "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/AuthorizationCodeTest.java",
    "signature" : "void testInvalidRedirectUri()",
    "API" : "org.keycloak.testsuite.oauth.AuthorizationCodeTest:void:testInvalidRedirectUri()"
  } ]
}, {
  "project_slug" : "hapifhir__org.hl7.fhir.core_CVE-2023-24057_5.6.91",
  "advisory_id" : "https://github.com/advisories/GHSA-jqh6-9574-5x22",
  "cve_id" : "CVE-2023-24057",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/NpmPackageVersionConverter.java",
    "signature" : "void execute()",
    "API" : "org.hl7.fhir.convertors.misc.NpmPackageVersionConverter:void:execute()"
  }, {
    "file" : "org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/NpmPackageVersionConverter.java",
    "signature" : "List getErrors()",
    "API" : "org.hl7.fhir.convertors.misc.NpmPackageVersionConverter:List:getErrors()"
  }, {
    "file" : "org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/NpmPackageVersionConverter.java",
    "signature" : "byte convertPackage(byte)",
    "API" : "org.hl7.fhir.convertors.misc.NpmPackageVersionConverter:byte:convertPackage(byte)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
    "signature" : "void unzip(InputStream,String)",
    "API" : "org.hl7.fhir.r4b.terminologies.TerminologyCacheManager:void:unzip(InputStream,String)"
  }, {
    "file" : "org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
    "signature" : "void initialize()",
    "API" : "org.hl7.fhir.r4b.terminologies.TerminologyCacheManager:void:initialize()"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
    "signature" : "void initialize()",
    "API" : "org.hl7.fhir.r5.terminologies.TerminologyCacheManager:void:initialize()"
  }, {
    "file" : "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
    "signature" : "void unzip(InputStream,String)",
    "API" : "org.hl7.fhir.r5.terminologies.TerminologyCacheManager:void:unzip(InputStream,String)"
  }, {
    "file" : "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/NpmPackage.java",
    "signature" : "void readStream(InputStream,String,boolean)",
    "API" : "org.hl7.fhir.utilities.npm.NpmPackage:void:readStream(InputStream,String,boolean)"
  }, {
    "file" : "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/NpmPackage.java",
    "signature" : "NpmPackage fromPackage(InputStream,String)",
    "API" : "org.hl7.fhir.utilities.npm.NpmPackage:NpmPackage:fromPackage(InputStream,String)"
  }, {
    "file" : "org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java",
    "signature" : "void extractFile(ZipInputStream,String)",
    "API" : "org.hl7.fhir.validation.Scanner:void:extractFile(ZipInputStream,String)"
  }, {
    "file" : "org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java",
    "signature" : "void genScanOutput(String,List)",
    "API" : "org.hl7.fhir.validation.Scanner:void:genScanOutput(String,List)"
  }, {
    "file" : "org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java",
    "signature" : "void unzip(String,String)",
    "API" : "org.hl7.fhir.validation.Scanner:void:unzip(String,String)"
  } ]
}, {
  "project_slug" : "whitesource__curekit_CVE-2022-23082_1.1.3",
  "advisory_id" : "https://github.com/advisories/GHSA-m9vj-44f3-78xw",
  "cve_id" : "CVE-2022-23082",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "src/main/java/io/whitesource/cure/FileSecurityUtils.java",
    "signature" : "boolean isFileOutsideDir(String,String)",
    "API" : "io.whitesource.cure.FileSecurityUtils:boolean:isFileOutsideDir(String,String)"
  }, {
    "file" : "src/test/java/io/whitesource/cure/FileSecurityUtilsTests.java",
    "signature" : "void normalize_validInput_successfullyWithResult()",
    "API" : "io.whitesource.cure.FileSecurityUtilsTests:void:normalize_validInput_successfullyWithResult()"
  } ]
}, {
  "project_slug" : "apache__dolphinscheduler_CVE-2022-34662_2.0.9",
  "advisory_id" : "https://github.com/advisories/GHSA-fp35-xrrr-3gph",
  "cve_id" : "CVE-2022-34662",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ResourcesServiceImpl.java",
    "signature" : "Result<Object> createDirectory(User loginUser, String name, String description, ResourceType type, int pid, String currentDir)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.ResourcesServiceImpl:Result<Object>:createDirectory(User loginUser, String name, String description, ResourceType type, int pid, String currentDir)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ResourcesServiceImpl.java",
    "signature" : "Result<Object> verifyFile(String name, ResourceType type, MultipartFile file)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.ResourcesServiceImpl:Result<Object>:verifyFile(String name, ResourceType type, MultipartFile file)"
  }, {
    "file" : "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ResourcesServiceImpl.java",
    "signature" : "Result<Object> onlineCreateResource(User loginUser, ResourceType type, String fileName, String fileSuffix, String desc, String content, int pid, String currentDir)",
    "API" : "org.apache.dolphinscheduler.api.service.impl.ResourcesServiceImpl:Result<Object>:onlineCreateResource(User loginUser, ResourceType type, String fileName, String fileSuffix, String desc, String content, int pid, String currentDir)"
  } ]
}, {
  "project_slug" : "testng-team__testng_CVE-2022-4065_7.5",
  "advisory_id" : "https://github.com/advisories/GHSA-rc2q-x9mf-w3vf",
  "cve_id" : "CVE-2022-4065",
  "cwe_id" : "CWE-022",
  "vulnerableAPI" : [ {
    "file" : "testng-core/src/main/java/org/testng/JarFileUtils.java",
    "signature" : "boolean testngXmlExistsInJar(File,List)",
    "API" : "org.testng.JarFileUtils:boolean:testngXmlExistsInJar(File,List)"
  } ]
} ]